;R4
;"mon.ovr Ver1.22
;" Jul.1984 by Aki
;      Oct 1984 MODEFIED FOR MINI-DOS V0.95
;DEBUG Nov 1984 MODEFYED TO VER 1.22
;                                                                            
ORIGIN EQU $E000
;ORIGIN EQU $C800
;ORIGIN EQU $9000
STARTLOC EQU ORIGIN
;
 TITLE 2:mon.ovr
;
 ORG STARTLOC
.PHASE ORIGIN
;
STACK EQU $FFF0
DOSEXE EQU 0
;
START:
 LD SP,STACK
 SRV ALOMAP
 LD L,(IY+4)
 LD H,(IY+5)
 LD (OLDVECT),HL
 LD (IY+4),START2   ;WARM VECTOR IS START($E000)
 LD (IY+5),START2/256
 JR ARMCMD
START2:LD SP,STACK
ARMCMD:
 LD SP,STACK
 SRV CPRNXT
 DEFB $D,$A,"MON]",0
ARMKEY:
 CALL ARMGET
 CALL UPPER
 CP 12
 CALL Z,CONOUT
 JR Z,ARMCMD
 CP 7
 CALL Z,CONOUT
 JR Z,ARMCMD
 CP 27
 JP Z,DOSENT
 CP 1
 JP Z,DSPHIS
 CP 32
 JR C,ARMCMD
 SRV CPRCHR
 CP "D"
 JR Z,ARMDUM
 CP "S"
 JP Z,ARMSUB
 CP "G"
 JP Z,ARMGO
 CP "X"
 JP Z,ARMEXM
 CP "E"
 JP Z,ARMEXECUTE
 CP "!"
 JP Z,DOSENT
 CALL ERRED
 JR ARMKEY
ERRED:
 SRV CPRNXT
 DEFB 7,29,32,29,0
 RET
;
ARMDUM:
 XOR A
 LD (WK+1),A
 CALL GETADR
 PUSH AF
 LD A,C
 OR A
 JR NZ,ADM40
 LD HL,(CURADR)
ADM40:
 POP AF
 PUSH HL
 LD DE,127
 ADD HL,DE
 CP ","
 JR NZ,ADM100
 CALL GETADR
ADM100:
 EX DE,HL
 POP HL
 SRV CPRCRLF
 LD A,L
 AND $F0
 LD L,A
ADM300:
 CALL PRIDX
 JR ADM400
;
PRIDX:
 LD C,0
 LD B,5
ADM310:
 SRV CPRSPC
 DJNZ ADM310
 LD B,16
ADM320:
 LD A,"+"
 SRV CPRCHR
 LD A,C
 CALL GENHEX
 SRV CPRCHR
 SRV CPRSPC
 INC C
 DJNZ ADM320
 LD A,"+"
 SRV CPRCHR
 LD B,16
 LD C,0
ADM330:
 LD A,C
 CALL GENHEX
 SRV CPRCHR
 INC C
 DJNZ ADM330
 SRV CPRCRLF
 RET
;
ADM400:
 CALL PR16B
 JR ADM500
;
PR16B:
 PUSH HL
 PUSH DE
 SRV CPR4HEX
 POP DE
 POP HL
 LD A,":"
 SRV CPRCHR
 PUSH HL
 LD B,16
ADM410:
 LD A,(HL)
 SRV CPR2HEX
 SRV CPRSPC
 PUSH HL
 OR A
 SBC HL,DE
 POP HL
 JR NZ,ADM415
 LD A,1
 LD (WK+1),A
ADM415:
 INC HL
 LD (CURADR),HL
 DJNZ ADM410
 POP HL
 LD A,"–"
 SRV CPRCHR
 LD B,16
ADM420:
 LD A,(HL)
 INC HL
 SRV CPRDIR
;
ADM430:
 DJNZ ADM420
 LD A,"–"
 SRV CPRCHR
 SRV STPESC
 SRV CPRCRLF
 RET
;
ADM500:
 LD A,(WK+1)
 OR A
 JP NZ,ARMCMD
 LD A,L
 OR A
 JP Z,ADM300
 JR ADM400
;
ARMEXM:
 SRV CPRCRLF
 RST $28
 DEFB ALOMAP
 LD L,(IY+20)
 LD H,(IY+21)
 LD DE,13*2
 ADD HL,DE
 LD DE,REGNAM
 LD C,13
AEX100:
 LD B,3
AEX110:
 LD A,(DE)
 INC DE
 SRV CPRCHR
 DJNZ AEX110
 LD A,":"
 SRV CPRCHR
 PUSH DE
 DEC HL
 LD D,(HL)
 DEC HL
 LD E,(HL)
 EX DE,HL
 SRV CPR4HEX
 EX DE,HL
 POP DE
 SRV CPRSPC
 LD A,8
 CP C
 CALL Z,PRCRLF
 DEC C
 JR NZ,AEX100
 SRV CPRCRLF
 JP ARMCMD
;
ARMSUB:
 CALL GETADR
 LD A,C
 OR A
 JR Z,ASB100
 LD (CURADR),HL
 LD (SUBKEEP),HL
ASB100:
 SRV CPRCRLF
 CALL PRIDX
 CALL ASB3L
 RST $28
 DEFB COFCB
 RST $28
 DEFB PUTNXT
 DEFB " > > Ten-Key is Hex-Mode < <",0
 LD HL,($EA63)
 LD (KEP2),HL
 RST $28
 DEFB PUTNXT
 DEFB 30,30,0
 LD HL,($EA63)
 LD H,1
 LD (LOCKEP),HL
ASB190:
 XOR A
 LD (ZURFLG),A
ASB200:
 CALL CALPOS
 JR ASB210
;
CALPOS:
 LD HL,(LOCKEP)
 LD ($EA63),HL
 LD HL,(CURADR)
 LD A,L
 AND $F
 LD B,A
 ADD A
 ADD B
 ADD 6
 LD ($EA64),A
 RET
;
ASB210:
 LD A,(ZURFLG)
 OR A
 JR Z,ASB220
 LD A,($EA64)
 INC A
 LD ($EA64),A
ASB220:
 LD A,20
 RST $28
 DEFB BELL
 CALL TENGET
 CP 30
 JP Z,ROLLUP
 CP 31
 JP Z,ROLLDW
 CP "N"-$40
 JP Z,ROLLDW3
 CP "B"-$40
 JP Z,ROLLUP3
 CP 28
 JP Z,RIGHT
 CP 29
 JP Z,LEFT
 CP 8
 JP Z,LEFT
 CP 11
 JP Z,HOME
 CP 3
 JP Z,ASSTOP
 CP 27
 JP Z,ASEXIT
 CALL HEXEN
 CALL TSTHEX
 JR NC,ASDATA
 LD A,7
 SRV CPRCHR
 JR ASB200
ASSTOP:LD HL,(SUBKEEP)
 LD (CURADR),HL
ASEXIT:
 LD HL,(KEP2)
 LD ($EA63),HL
 LD A,30
 SRV CPRCHR
 JP ARMCMD
ASDATA:
 SRV CPRCHR
 CALL CHGHEX
 LD B,A
 LD C,$F0
 LD A,(ZURFLG)
 OR A
 JR NZ,ASD100
 LD C,$F
 LD A,B
 RLCA
 RLCA
 RLCA
 RLCA
 LD B,A
ASD100:
 LD HL,(CURADR)
 LD A,C
 AND (HL)
 OR B
 LD (HL),A
 CALL CALPOS
 LD HL,(CURADR)
 LD A,(HL)
 PUSH AF
 SRV CPR2HEX
 LD A,(CURADR)
 AND $F
 ADD A,16*3+5+2
 LD ($EA64),A
 POP AF
 SRV CPRDIR
 JR RIGHT
;
ROLLUP3:LD DE,0-48
 JR ROLCOM
ROLLDW3:LD DE,48
 JR ROLCOM
ROLLUP:
 LD DE,0-16
 JR ROLCOM
ROLLDW:
 LD DE,16
ROLCOM:
 LD HL,(CURADR)
 ADD HL,DE
 LD (CURADR),HL
 LD HL,(LOCKEP)
 DEC L
 LD ($EA63),HL
 CALL ASB3L
;IF NBASIC_MODE
 XOR A
 LD ($EA57),A
;ENDIF
ASB200PASS:
 JP ASB200
;
RIGHT:
 LD A,(ZURFLG)
 CPL
 LD (ZURFLG),A
 OR A
 JR NZ,ASB200PASS
 LD DE,1
 LD HL,(CURADR)
 LD A,L
 AND $F
 CP $F
 JR Z,ROLCOM
 JR HRZCOM
LEFT:
 LD A,(ZURFLG)
 CPL
 LD (ZURFLG),A
 OR A
 JR Z,ASB200PASS
 LD DE,0-1
 LD HL,(CURADR)
 LD A,L
 AND $F
 JR Z,ROLCOM
HRZCOM:
 ADD HL,DE
 LD (CURADR),HL
 JR ASB200PASS
HOME:
 LD HL,(SUBKEEP)
 LD (CURADR),HL
 XOR A
 LD (ZURFLG),A
 LD DE,0
 JR ROLCOM
;
HEXEN:
 PUSH IX
 PUSH BC
 LD IX,HEXENTBL
 LD B,6
HEXN10:
 CP (IX+0)
 JR Z,HEXN20
 INC IX
 DJNZ HEXN10
 JR HEXN30
HEXN20:LD A,(IX+6)
HEXN30:
 POP BC
 POP IX
 RET
;
HEXENTBL:DEFB "*+=",13,".,ABCDEF"
;
TENGET:
 SRV CINCHR
 CALL UPPER
 RET
;
ASB3L:
 LD HL,(CURADR)
 PUSH HL
 LD A,L
 AND $F0
 LD L,A
 LD DE,0-16
 ADD HL,DE
 LD B,3
ASB3L1:
 PUSH BC
 CALL PR16B
 POP BC
 DJNZ ASB3L1
 POP HL
 LD (CURADR),HL
 RET
;
ARMGO:
 CALL GETADR
 CP 13
 JP NZ,ARMCMD
 LD A,C
 OR A
 JP Z,ARMCMD
 SRV CPRCRLF
LEAVE:
 SRV ALOMAP
 LD DE,(OLDVECT)
 LD (IY+4),E
 LD (IY+5),D
;
 LD SP,STACK
 LD DE,DOSEXE
 PUSH DE
 JP (HL)
;
ARMEXECUTE:
 CALL ARMGET
 CP 13
 JP NZ,ARMCMD
 SRV CPRCRLF
 RST $28
 DEFB ALOMAP
 LD L,(IY+6)
 LD H,(IY+7)
 JP LEAVE
;
ARMGET:
 LD A,"*"
 SRV CPRCHR
 LD A,29
 SRV CPRCHR
 SRV CINCHR
 CP 3
 JP Z,ARMCMD
 PUSH AF
 LD A,32
 SRV CPRCHR
 LD A,29
 SRV CPRCHR
 POP AF
 RET
;
GETADR:
 LD HL,0
 LD C,0
GAD100:
 PUSH HL
 CALL ARMGET
 CALL UPPER
 SRV CPRCHR
 POP HL
 CP ","
 RET Z
 CP 13
 RET Z
 CALL CHGHEX
 CALL NC,ERRED
 JR NC,GAD100
 ADD HL,HL
 ADD HL,HL
 ADD HL,HL
 ADD HL,HL
 LD C,1
 LD E,A
 LD D,0
 ADD HL,DE
 JR GAD100
;
;
;
UPPER:
 CP "a"
 RET C
 CP "z"+1
 RET NC
 SUB $20
 RET
;
;"if C then error
TST09:
 CP "0"
 RET C
 CP "9"+1
 CCF
 RET
;
TSTHEX:
 CALL TST09
 RET NC
TSTAF:
 CP "A"
 RET C
 CP "F"+1
 CCF
 RET
;
;"if nc then error
CHGHEX:
 SUB $30
 CP 10
 RET C
 SUB 7
 CP 16
 RET
;
GENHEX:
 AND $F
 ADD $30
 CP $3A
 RET C
 ADD 7
 RET
;
DOSENT:
 LD HL,DOSEXE
 JP LEAVE
CONOUT:SRV CPRCHR
 RET
PRCRLF:SRV CPRCRLF
 RET
;
;
DSPHIS:
	SRV	CPRNXT
	DEFB	$D,$A,$A
	DEFB	"MONITOR ovr command VERSION 1.22",$D,$A
	DEFB	" FOR MINI-DOS VERSION 0.9 or MORE",$D,$A
	DEFB	"COPYRIGHT 1984 BY AKIRA KITA",$D,$A
	DEFB	$D,$A,0
	JP	ARMCMD
;
REGNAM:DEFB " AF BC DE HL IX IYAF'BC'DE'HL' SPTopSec"
;
;
 INCLUDE dosequ
;                                                
;
WK:DEFS 2
CURADR:DEFS 2
SUBKEEP:DEFS 2
KEP2:DEFS 2
LOCKEP:DEFS 2
ZURFLG:DEFS 1
OLDVECT:DEFS 2
;
ZZZZZZ:
.DEPHASE
 END
