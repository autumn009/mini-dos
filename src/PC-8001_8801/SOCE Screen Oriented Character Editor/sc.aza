;R6
;
;"EA
;" or ED
;"plus SOCE
;" Jul.1984
; Oct 1984 MODEFIED FOR MINI-DOS V0.95  (V1.2)
; Nov 1984 DEBUGED                      (V1.21)
; Nov 1984 EXPANDED                     (V1.3)
; Dec 1984 DEBUGED                      (V1.31)
; Dec 1984 DEBUGED (NOT FORM ex. 1 MOD 2)   (V1.32)
; Jan 1985 DEBUGED (add DI and EI)      (V1.33)
; Feb 1985 DEBUGED (For senko.exp)      (V1.34)
;"Copyright 1984 (c) by Akira Kita
;
	TITLE	2:edn.flc
;
FALSE	EQU	0
TRUE	EQU	$FFFF
;
DEBUG	EQU	FALSE
FILEVER	EQU	TRUE
;
;
;"Aza area is $120-$1fff
AZATOP	EQU	$120
;
;"command and soce's start address is $2000.
	IF	DEBUG
COMMAND	EQU	$100
STARTLOC	EQU	COMMAND
	ELSE
	IF	FILEVER
COMMAND	EQU	$100
STARTLOC	EQU	COMMAND
	ELSE
COMMAND	EQU	$2000
STARTLOC	EQU	COMMAND
	ENDIF
	ENDIF
;
EXIT:	EQU	0
INPUTBUF	EQU	$EC96
;
FK_AREA	EQU	$EA7C
;"Work Area
STACK:	EQU	$FFF0
WK:	EQU	STACK
WK2:	EQU	STACK+2
VERFLG:	EQU	STACK+4
CURCHR	EQU	STACK+6
CHGFLG	EQU	STACK+7
FILTKEP	EQU	STACK+8
QFLG	EQU	STACK+10
MARKFLG	EQU	STACK+11
KP1	EQU	STACK+12
KP2	EQU	STACK+14
;
;
EOL	EQU	$0D
EOF	EQU	0
;
;
;ORG AZATOP
;JP COLDST
;JP WARMST
;
;
;TXTTOP:DEFW $8100
;POINTR:DEFW $8100
;POINTR2:DEFW $8100
TXTTOP	EQU	$FF60
POINTR	EQU	$FF62
POINTR2	EQU	$FF64
BUFSIZ	EQU	$FF6A
MARKB	EQU	$FF6C
MARKE	EQU	$FF6E
ERRMARK	EQU	$FF70
;
	ORG	STARTLOC
.PHASE	COMMAND
;
	IF	DEBUG
;
	SRV	ALOMAP
	LD	(IY+4),NNN
	LD	(IY+5),NNN/256
	CALL	COLDENT
NNN:	CALL	OPTENT
	SRV	CINLIN
	CALL	FILTENT
	SRV	CPRNXT
	DEFB	"??????",$D,$A,0
	ENDIF
;
;
	JP	0		;DUMMY
	JP	COLDENT
	JP	0		;DUMMY
	JP	FILTENT
	JP	CLOSEENT
	JP	OPTENT
	JP	0		;DUMMY
;
;
.XLIST
	INCLUDE	dosequ
.LIST
	INCLUDE	sccmd
	IF	FILEVER
	INCLUDE	ldirp
	ELSE
LDIRP:LDIR
	RET
LDDRP:LDDR
	RET
	ENDIF
	IF	FILEVER
	INCLUDE	sp
	ENDIF
;
;
FINDCMD:
	PUSH	HL
	CALL	CHGCAP
	POP	HL
	LD	(WK),HL
	LD	DE,(POINTR)
	LD	A,(HL)
	OR	A
	JP	Z,WARMM
FND200:
	LD	(WK2),DE
	LD	HL,(WK)
FND300:
	LD	A,(HL)
	OR	A
	JR	Z,FNDFND
	LD	A,(DE)
	INC	DE
	OR	A
	JP	Z,INIT		;NOT FOUND
	CP	(HL)
	INC	HL
	JR	Z,FND300
	LD	DE,(WK2)
	INC	DE
	JR	FND200
FNDFND:
	LD	HL,(WK2)
	LD	BC,0
	LD	A,EOL
	CPDR
	INC	HL
	INC	HL
	LD	(POINTR),HL
	JR	INIT
;
EDTCMD:
	PUSH	HL
	CALL	CHGCAP
	POP	HL
	LD	A,(HL)
	LD	(WK),HL
	OR	A
	JR	Z,INIT
	LD	HL,(TXTTOP)
LP2:	LD	DE,(WK)
	LD	(WK2),HL
	LD	A,(HL)
	OR	A
	JR	Z,INIT
LP1:	LD	A,(DE)
	OR	A
	JR	Z,MATCH
	LD	B,(HL)
	INC	HL
	INC	DE
	CP	B
	JR	Z,LP1
	LD	BC,$FFFF
	LD	A,EOL
	CPIR
	JR	LP2
MATCH:	LD	HL,(WK2)
	LD	(POINTR),HL
INIT:
	CALL	FK_INIT
	XOR	A
	IF	FILEVER
	LD	(QFLG),A
	ENDIF
	CALL	CRTC
	LD	A,1
	LD	($EA60),A
	CALL	FK_FRESH
;
;
;
	LD	A,32		;"null
	LD	($EA5A),A
	ROMCALL	$45A
	CALL	CLS
	LD	HL,(TXTTOP)
	DEC	HL
	LD	(HL),EOL
	INC	HL
	XOR	A
	LD	BC,$FFFF
	CPIR
	INC	HL
	LD	(HL),0
	DEC	HL
	LD	(HL),EOL
	DEC	HL
	LD	(HL),$1E
	LD	HL,(POINTR)
	LD	A,(HL)
	OR	A
	CALL	Z,BACK
	CALL	SETINFS
	JP	MAIN
;
PARC:
CURLINE:	DEFB	12
STARTLINE:	DEFB	1
ENDLINE:	DEFB	23
OFSETC:	DEFB	0
OFSETA:	DEFB	81
LENLINE:	DEFB	80
;
PAR0:	DEFB	12,1,23,0,81,80
PAR1:	DEFB	19,13,23,0,81,80
PAR2:	DEFB	7,1,11,0,81,80
PAR1V:	DEFB	12,1,23,0,81,39
PAR2V:	DEFB	12,1,23,41,85,39
;
POSITION:	DEFB	0
POSITION2:	DEFB	0
OLDPOSITION:	DEFB	0
;
BUFFER:	DEFW	0
;
INSFLG:	DEFB	1
;
WINFLG:	DEFB	0
;
	IF	FILEVER
;             012345678901234567890123456789
QFLGMES:	DEFB	">>>>>>> Extend Command:       "
;
DISPQFLG:
	LD	HL,$F300
	LD	DE,$F301
	LD	BC,79
	LD	(HL),32
	LDIR
;
	LD	HL,QFLGMES
	LD	DE,$F300
	LD	BC,30
	LDIR
	RET
	ENDIF
;
DISPINF:
; LD A,11
; CALL CONOUT
;
	LD	DE,$F300
	LD	HL,INFMES
	LD	BC,80
	LDIR			;CLEAR WORKING MESSAGE
;
	IF	FILEVER
	LD	A,(QFLG)
	OR	A
	JR	NZ,DISPQFLG
	ENDIF
; LD A,"<"
; CALL CONOUT
	LD	DE,(TXTTOP)
	LD	HL,(POINTR)
	OR	A
	SBC	HL,DE
	LD	B,18
	INC	HL
; LD A,(POSITION)
; LD E,A
; LD D,0
; ADD HL,DE
	CALL	PDEC
;
	LD	HL,(INF1)
	LD	B,24
	CALL	PDEC
;
	LD	HL,(INF2)
	LD	B,44
	CALL	PDEC
;
;
; LD HL,INFMES1
; CALL PRSTR
; LD HL,(POSITION)
; LD H,0
; INC L
; CALL PRDEC
; LD HL,INFMES2
; CALL PRSTR
; LD HL,(POINTR)
; CALL PR4HEX
; LD A,">"
; CALL CONOUT
	LD	A,$20
	LD	($F300+81),A
	RET
;            012345678901234567890123456789
INFMES:	DEFB	"<POINTER POSITION _____/_____>"
	DEFB	" <MEMORY LEFT _____ BYTES>    "
	DEFB	"                    "
;
;INFMES1:DEFB " BYTES><",0
;INFMES2:DEFB " CHRS><ADR:",0
;
SETINFS:
	LD	HL,(POINTR)
	LD	BC,$FFFF
	XOR	A
	CPIR
	DEC	HL
	DEC	HL
	LD	DE,(TXTTOP)
	OR	A
	SBC	HL,DE
	LD	(INF1),HL
	EX	DE,HL
	LD	HL,(BUFSIZ)
	OR	A
	SBC	HL,DE
	LD	(INF2),HL
	RET
;
DISPWRK:
	LD	DE,$F300+70
	LD	HL,WRKMES
	LD	BC,WRKMESE-WRKMES
	LDIR
	RET
WRKMES:	DEFB	"Working"
WRKMESE:
;
DISPLINE:
	LD	A,(CURLINE)
	LD	C,A
	LD	B,0
	CALL	VRAMAD
	EX	DE,HL
	LD	HL,INPUTBUF
	LD	BC,80
	LD	A,(DIVMODE)
	OR	A
	JR	Z,DSLINE10
	LD	A,(WINFLG)
	OR	A
	JR	Z,DSLINE10
	LD	BC,39
DSLINE10:LDIR
	RET
;
DISP:
	LD	BC,DISPINF
	PUSH	BC
	CALL	BEEPSW
	XOR	A
	LD	(CHGFLG),A
; CALL CLS
	LD	A,(WINFLG)
	OR	A
	JR	NZ,DISPM
	LD	HL,(POINTR)
	LD	DE,(TXTTOP)
	LD	IX,PAR0
	CALL	DISPSUB
	SRV	BEEPOF
	JP	STORELINE
;
DISPM:
	DEC	A
	JP	NZ,ESCAPE
	LD	A,(DIVMODE)
	OR	A
	JR	NZ,DISPV
	LD	IX,PAR2
	LD	HL,(POINTR2)
	LD	DE,(TXTTOP)
	CALL	DISPSUB
	LD	HL,12*120+$F300
	LD	B,80
	LD	A,"="
DSPM10:
	LD	(HL),A
	INC	HL
	DJNZ	DSPM10
;
	LD	HL,(POINTR)
	LD	DE,(TXTTOP)
	LD	IX,PAR1
	CALL	DISPSUB
	SRV	BEEPOF
	JP	STORELINE
;
DISPV:
	LD	HL,39+$F300+120
	LD	DE,120-1
	LD	B,23
	LD	A,"á"
DSPV10:
	LD	(HL),A
	INC	HL
	LD	(HL),"ã"
	ADD	HL,DE
	DJNZ	DSPV10
;
	LD	HL,(POINTR)
	LD	DE,(TXTTOP)
	LD	IX,PAR1V
	CALL	DISPSUB
	LD	IX,PAR2V
	LD	HL,(POINTR2)
	LD	DE,(TXTTOP)
	CALL	DISPSUB
	SRV	BEEPOF
STORELINE:
	LD	HL,INPUTBUF
	PUSH	HL
	LD	E,L
	LD	D,H
	INC	DE
	LD	BC,79
	LD	(HL),32
	LDIR
	LD	HL,(POINTR)
	POP	DE
	LD	B,80
	CALL	DSPLSUB
; EX DE,HL
; LD (HL),0
	RET
;
DSPLSUB:
;**** CLEAR LINE TO DISPLAY
	KEEP	HL,DE,BC
	LD	L,E		;FAST SCREEN CLEAR BEFORE PUT LINE
	LD	H,D
	INC	DE
	LD	C,B
	LD	B,0
	DEC	BC
	LD	(HL),32
	LDIR
	KEEPOUT
;*** TRANSFER LINE
	LD	C,0
DSL30:	
	LD	A,(HL+)		;TRANSFER LINE
	CP	" "
	JR	NC,DSL40
	CP	EOL
	RET	Z
	CP	9
	JR	NZ,DSL40
	INC	B
DSL32:	INC	C
	LD	A,$20
	LD	(DE+),A
	DEC	B
	LD	A,B
	DEC	A
	JR	Z,DSL44
	LD	A,C
	AND	7
	JR	NZ,DSL32
	JR	DSL42
DSL40:	INC	C
	LD	(DE+),A
DSL42:	DJNZ	DSL30
DSL44:	LD	BC,0
	LD	A,EOL
	CPIR
	RET
;
;"HL:pointr
;"DE:txttop
;"IX:parX
DISPSUB:
	LD	A,(IX+0)	;CURLINE
	LD	C,A		;IS SEARCH START LINE ON SCREEN
;
	DEC	HL		;SKIP LAST EOL MARK
	DEC	DE		;BEGIN-2 (BEFORE EOL MARK-1)
	DEC	DE
DS10:
	PUSH	BC
	LD	A,EOL
	LD	BC,$FFFF
	CPDR			;SEARCH LINE TOP ADRS
	POP	BC
	LD	A,(IX+1)	;CUR-Y = STARTLINE ?
	CP	C
	JR	Z,DS15		; OK THEN START PUT OUT
	DEC	C
	PUSH	HL
	OR	A
	SBC	HL,DE
	POP	HL
	JR	NZ,DS10		;MORE LINE BACK
DS12:
	KEEP	HL,BC
	CALL	DISPBAR
	JR	DS135
DS13:
	CALL	DISPBAR2
DS135:	LD	A,(IX+1)
	CP	C
	JR	Z,DS14
	DEC	C
	JR	DS13
DS14:
	KEEPOUT
	INC	C		;FROM NEXT LINE
;
DS15:	INC	HL		;START PUT OUT
	INC	HL
DS20:
	PUSH	HL
	CALL	CLRATR
	LD	DE,(POINTR2)
	OR	A		;IF THE LINE IS SUB-PNT
	SBC	HL,DE		; THEN BRINK
	LD	A,2
	CALL	Z,DISPATR
	IF	FILEVER
	LD	A,(MARKFLG)
	CP	3
	JR	NZ,DS23
	POP	HL
	PUSH	HL
	EX	DE,HL
	LD	HL,(MARKB)
	OR	A
	SBC	HL,DE
	JR	Z,DS225
	JR	NC,DS23
DS225:	LD	HL,(MARKE)
	OR	A
	SBC	HL,DE
	JR	C,DS23
	JR	Z,DS23
	LD	A,4
	CALL	DISPATR
	ENDIF
DS23:POP HL
 PUSH HL
 LD DE,(POINTR) ;IF THE LINE IS POINTER(MAIN)
 OR A           ; THEN UNDER LINE
 SBC HL,DE
 LD A,$20       ;UNDER LINE ATTRIBUTE
 CALL Z,DISPATR
 LD B,(IX+3)
 CALL VRAMAD    ;ADRS OF LINE TOP ON VRAM
 EX DE,HL
 POP HL
 PUSH BC
 LD C,0
 LD B,(IX+5)
; LD A,(DIVMODE)
; LD B,80
; OR A
; JR Z,DS30
; LD A,(WINFLG)
; OR A
; JR Z,DS30
; LD B,39
;DS30:
 CALL DSPLSUB
DS50:POP BC
 INC C      ;NEXT LINE
 LD A,(IX+2)    ;ENDLINE?
 INC A
 CP C
 RET Z          ; THEN RETURN
 XOR A
 CP (HL)
 JP NZ,DS20     ;IF NOT EOF THEN REPEAT
 CALL DISPBAR
 JR DS91
DS90:CALL DISPBAR2
DS91:LD A,(IX+2)
 CP C
 RET Z
 INC C                                                             
 JR DS90
;
;
DISPBAR2:LD A,"¥"
 JR DISPBARCOM
DISPBAR:
 LD A,"ð"
DISPBARCOM:PUSH BC
 LD B,(IX+3)
 CALL VRAMAD
 LD E,L
 LD D,H
 INC DE
 LD C,(IX+5)
 DEC C
 LD B,0
; LD A,(DIVMODE)
; OR A
; LD BC,79
; JR Z,DISPB10
; LD A,(WINFLG)
; OR A
; JR Z,DISPB10
; LD BC,38
DISPB10:LD (HL),A
 LDIR
 POP BC
;
CLRATR:                                                                      
 KEEP HL
 LD B,(IX+4)
 CALL VRAMAD
 LD (HL),0
 KEEPOUT
 RET                                                           
;
DISPATR:
; KEEP HL
 LD B,(IX+4)
 CALL VRAMAD
 OR (HL)
 LD (HL),A
; KEEPOUT
 RET
;
;                                                                      
 IF FILEVER
QMAIN:
 LD A,($EA68)
 OR A
 JP Z,QM10
 XOR A
 LD (QFLG),A
 POP AF
 CP 12
 JP Z,FKCMD
 PUSH AF
QM10:	POP	AF
	CP	12
	JP	Z,MAIN2		;RESQFLG
	KEEP	AF
	XOR	A
	LD	(QFLG),A
	KEEPOUT
	CALL	TEST09
	JP	NC,FKCMD3
	CALL	UPPER
	CP	"H"
	JP	Z,BLKHIDE	;NOT DISPLAY BLOCKER
	CP	"B"
	JP	Z,BLKBGN
	CP	"E"
	JP	Z,BLKEND
	CP	"R"
	JP	Z,READFILE
	CP	"W"
	JP	Z,WRITEFILE
	CP	"Y"
	JP	Z,BLKERASE
	CP	"C"
	JP	Z,BLKCOPY
	CP	"F"
	JP	Z,FIND
	CP	"A"
	JP	Z,REPLACE
	CP	"G"
	JP	Z,CONTFIND
;
;
	IF	0
;
	CP	"Q"
	JP	Z,QERR
;
	ENDIF
;
 JR MAIN
;
 ENDIF
;
MAIN0:CALL CLS
MAIN:
;CALL CUROFF
 CALL DISP
 LD A,(POSITION)
 LD (OLDPOSITION),A
MAIN2:
 LD SP,STACK
 LD HL,(POINTR)
 LD A,(HL)
 OR A
 PUSH AF
 CALL Z,BACK
 POP AF
 CALL Z,DISP
 CALL DISPINF
 CALL DISPLINE
 CALL SETCURS
 LD HL,(POINTR)
 LD A,(HL)
 CP 30
 JR Z,MA20
 OR A
 JR Z,MA20
 IF FILEVER
  LD A,(GOFINDFLG)
  OR A
  JR Z,MA30
  SRV SENSE
  JP NC,CONTFIND
  CALL DISP
  LD BC,0
  SRV TEXTCUR
  SRV CPRNXT
  DEFB "BREAK!",0
  LD B,70
  LD A,"!"
MA19:CALL CONOUT
  DJNZ MA19
  XOR A
  SRV BELL
  XOR A
  LD (GOFINDFLG),A
  JR MAIN
  ENDIF
MA20:
 IF FILEVER
  XOR A
  LD (GOFINDFLG),A
 ENDIF
MA30:CALL CONIN
 PUSH AF
 CALL CUROFF
 CALL DISPWRK
 IF FILEVER
  LD A,(QFLG)
  OR A
  JP NZ,QMAIN
 ENDIF
	POP	AF
;
	CP	1
	JP	Z,DBGCMD
;
 CP 12
 JP Z,FKCMD
 CP $0D
 JP Z,CHR
 CP 3
	JP	Z,CANCEL
 CP $1F
 JP Z,NEXT1
 CP $1E
 JP Z,BACK1
 CP $0B
 JP Z,TOP
 CP $0C
 JP Z,MAIN
 CP "Z"-$40
 JP Z,LAST
 CP "B"-$40
 JP Z,BACK10
 CP "N"-$40
 JP Z,NEXT10
 CP $1B
 JP Z,ESCAPE
 CP $1C
 JP Z,RIGHT
 CP $1D
 JP Z,LEFT
 CP "X"-$40
 JP Z,CTRLX
 CP "E"-$40
 JP Z,CTRLE
 CP "H"-$40
 JP Z,DELCHR
 CP "G"-$40
 JP Z,BSCHR
 CP "I"-$40
 JP Z,CTRLI
 CP "Y"-$40
 JP Z,CAPSLOCK
 CP "F"-$40
 JP Z,FORCE_FORM
 CP $20
 JP C,MAIN2
;
CHR:
 LD (CURCHR),A
 LD A,(INSFLG)
 OR A
 JR NZ,INSCHR
 LD A,(CURCHR)
 CP EOL
 JR Z,CHRCR
 LD A,(POSITION)
 LD E,A
 LD D,0
 LD HL,INPUTBUF
 ADD HL,DE
 LD A,(CURCHR)
 LD (HL),A
 CALL CHGON
 JP RIGHT
CHRCR:CALL EDT
 CALL NEXTT
 XOR A
 LD (POSITION),A
 JP MAIN
;
INSCHR:
 CALL CHGON
 LD HL,INPUTBUF+79
 LD B,79
 LD A,(HL)
 CP 32
 JR Z,INSCH05
 OR A
 JP NZ,MAIN2
INSCH05:LD A,(POSITION)
 CP 79
 JR Z,INSCH30
INSCH10:
 DEC HL
 LD A,(HL)
 INC HL
 LD (HL),A
 DEC HL
 DEC B
 LD A,(POSITION)
 CP B
 JP NZ,INSCH10
INSCH30:LD A,(CURCHR)
 LD (HL),A
 CP EOL
 JP NZ,RIGHT
 CALL EDT
 CALL NEXTT
 XOR A
 LD (POSITION),A
 JP MAIN
;
RIGHT:
 LD A,$1C
 CALL CONOUT
 LD A,(POSITION)
 INC A
 LD (POSITION),A
 CP 80
 JP NZ,MAIN2
 CALL NEXTT
 XOR A
 LD (POSITION),A
 JP MAIN
;
LEFT:
 LD A,$1D
 CALL CONOUT
 LD A,(POSITION)
 OR A
 JR Z,LEFT10
 DEC A
 LD (POSITION),A
 JP MAIN2
;
LEFT10:
 CALL BACK
 LD A,79
 LD (POSITION),A
 JP MAIN
;
BSCHR:
 CALL CHGON
 LD A,(POSITION)
 CP 79
 JR NZ,BS10
 LD E,A
 LD D,0
 LD HL,INPUTBUF
 ADD HL,DE
 LD (HL),32
 JP MAIN2
BS10:
 LD E,A
 LD D,0
 LD HL,INPUTBUF
 ADD HL,DE
 CALL DELCH20
 JP MAIN2
;
DELCHR:
 LD A,(POSITION)
 OR A
 JR Z,DELCHCR
 DEC A
 JR DELCH10
DELCHEE:
 LD HL,INPUTBUF+79
 LD (HL),32
 CALL CHGON
 CALL LEFT
 JP MAIN2
;
DELCH10:
 LD E,A
 LD D,0
 LD HL,INPUTBUF
 ADD HL,DE
 CALL DELCH20
 JR DELCHEE
DELCH20:
 INC HL
 LD A,(HL)
 DEC HL
 LD (HL),A
 INC HL
 INC E
 LD A,E
 CP 79
 JR NZ,DELCH20
 LD (HL),32
 RET
;
DELCHCR:
 LD DE,(POINTR)
 LD A,(DE)
 CP $1E
 JP Z,MAIN
 LD HL,(TXTTOP)
 OR A
 SBC HL,DE
 JP Z,MAIN2
 PUSH DE
 LD HL,(POINTR)
 LD DE,(POINTR2)
 OR A
 SBC HL,DE
 JR NZ,DCC10
 CALL BACK
 LD HL,(POINTR)
 LD (POINTR2),HL
 JR DCC50
DCC10:
 JP NC,DCC40
 EX DE,HL
 DEC HL
 LD (POINTR2),HL
DCC40:
 CALL BACK
DCC50:
 CALL DISP
 CALL CTRLXSUB
 CALL SCHEND
 POP DE
 OR A
 SBC HL,DE
 LD C,L
 LD B,H
 LD L,E
 LD H,D
 DEC DE
 CALL LDIRP
 JP MAIN
;
;
CTRLXSUB:
 LD HL,INPUTBUF+79
 LD B,80
CX10:
 LD A,B
 OR A
 JR Z,CX20
 LD A,(HL)
 DEC HL
 DEC B
 CP 32
 JR Z,CX10
 OR A
 JR Z,CX10
 LD A,B
 CP 80
 JR NC,CX20
 INC A
CX20:
 LD (POSITION),A
 RET
CTRLX:CALL CTRLXSUB
 JP MAIN2
;
CTRLESUB:
 CALL CHGON
 LD A,(POSITION)
 LD E,A
 LD D,0
 LD HL,INPUTBUF
 ADD HL,DE
CE10:
 LD (HL),32
 INC HL
 INC E
 LD A,E
 CP 80
 JR NZ,CE10
 RET
;
CTRLE:CALL CTRLESUB
 JP MAIN2
;
CTRLI:CALL CTRLISUB
 JP MAIN2
CTRLISUB:
 LD A,(POSITION)
 CP 79
 RET Z
CI10:INC A
 CP 79
 JR Z,CI20
 LD B,A
 AND 7
 LD A,B
 JR NZ,CI10
CI20:LD (POSITION),A
 RET
;
;
FKCMD:
 LD A,($EA68)
 OR A
 IF FILEVER
  JR NZ,FKCMD2
  LD A,1
  LD (QFLG),A
  JP MAIN2
 ELSE
  JP Z,MAIN2
 ENDIF
FKCMD2:XOR A
 LD ($EA68),A
 LD HL,($EDC0)
 LD A,(HL)
FKCMD3:SUB "0"
 ADD A,A
 LD L,A
 LD H,0
 LD DE,FKCTBL
 ADD HL,DE
 LD E,(HL)
 INC HL
 LD D,(HL)
 EX DE,HL
 JP (HL)
;
FKCTBL:
 DEFW C_COME
;
 DEFW C_INSREP
 DEFW C_SWAP
 DEFW C_LWORD
 DEFW C_RWORD
 DEFW C_NEWLINE
;
 DEFW C_DELLN
 DEFW C_MW
 DEFW C_COPYLN
 DEFW C_MOVELN
;
C_INSREP:
 LD A,(INSFLG)
 OR A
 LD A,1
 JR Z,CIR10
 XOR A
CIR10:
 LD (INSFLG),A
 CALL INSREPSUB
 JP MAIN2
;
INSREPSUB:
 LD A,(INSFLG)
 OR A
 LD HL,INSMES
 JR NZ,CINS10
 LD HL,REPMES
CINS10:
 LD DE,FK_AREA+3
 LD BC,7
 LDIR
 CALL FK_FRESH
 RET
;
C_SWAP:
 CALL EDT
 CALL SWAPSUB
 JP MAIN
;
SWAPSUB:
 LD HL,(POINTR)
 LD DE,(POINTR2)
 LD (POINTR),DE
 LD (POINTR2),HL
 LD A,(POSITION)
 LD B,A
 LD A,(POSITION2)
 LD (POSITION),A
 LD A,B
 LD (POSITION2),A
 RET
;
C_RWORD:LD A,(CURLINE)
 LD C,A
 LD A,(POSITION)
 LD B,A
 CALL VRAMAD
 LD A,(HL)
 JR CRW07
CRW05:CALL INCPOS
 JP Z,RIGHTWD
CRW07:CALL TESTAN
 JR NC,CRW05
CRW10:
 CALL INCPOS
 JP Z,RIGHTWD
 CALL TESTAN
 JR C,CRW10
CRWEE:
 CALL SETCURS
 CALL KEYREP2
 JR Z,C_RWORD
 JP MAIN2
;
RIGHTWD:
 CALL EDT
 CALL NEXTT
 XOR A
 LD (POSITION),A
 CALL DISP
 JP CRWEE
;
C_LWORD:
 CALL DECPOS
 JP Z,LEFTWD
 CALL TESTAN
 JR C,CLW10
CLW05:
 CALL DECPOS
 JP Z,CLWEE
 CALL TESTAN
 JR NC,CLW05
 CALL INCPOS
 JR CLWEE
;
CLW10:
 CALL DECPOS
 JP Z,LEFTWD
 CALL TESTAN
 JR C,CLW10
CLW20:
 CALL DECPOS
 JP Z,CLWEE
 CALL TESTAN
 JR NC,CLW20
 CALL INCPOS
CLWEE:
 CALL SETCURS
 CALL KEYREP2
 JR Z,C_LWORD
 JP MAIN2
;
LEFTWD:
 CALL EDT
 CALL BACK
 CALL DISP
 CALL CTRLXSUB
 JP CLWEE
;
INCPOS:
 LD A,(POSITION)
 CP 79
 RET Z
 INC A
 LD (POSITION),A
 LD B,A
 LD A,(CURLINE)
 LD C,A
 CALL VRAMAD
 OR 255
 LD A,(HL)
 RET
;
DECPOS:
 LD A,(POSITION)
 OR A
 RET Z
 DEC A
 LD (POSITION),A
 LD B,A
 LD A,(CURLINE)
 LD C,A
 CALL VRAMAD
 OR 255
 LD A,(HL)
 RET
;
C_NEWLINE:
 CALL EDT
 CALL NEXTT
 XOR A
 LD (POSITION),A
 CALL DISP
 CALL KEYREP
 JR Z,C_NEWLINE
 JP MAIN2
;
C_DELLN:
 CALL CUROFF
 CALL DELETE
 CALL SETINFS
 CALL DISP
 CALL KEYREP
 JR Z,C_DELLN
 JP MAIN2
;
C_MW:	CALL	EDT
	ROMCALL	$45A
 LD A,(WINFLG)
 CP 1
 JR NZ,CMW10
 XOR A
 LD (WINFLG),A
 LD HL,PAR0
 LD DE,PARC
 LD BC,6
 LDIR
 CALL CMWSUB
 JP MAIN
;
CMW10:
 LD A,1
 LD (WINFLG),A
 LD A,(DIVMODE)
 OR A
 LD HL,PAR1
 JR Z,CMW11
 LD HL,PAR1V
CMW11:LD DE,PARC
 LD BC,6
 LDIR
 CALL CMWSUB
 JP MAIN
;
CMWSUB:
 LD A,(WINFLG)
 CP 1
 LD HL,ONMES
 JR NZ,CMWS10
 LD HL,OFFMES
CMWS10:
 LD DE,16*6+FK_AREA+6
 LD BC,3
 LDIR
 CALL FK_FRESH
 CALL CLS
 RET
;
COPYSUB:
 LD DE,INPUTBUF
 LD (BUFFER),DE
 PUSH DE
 LD HL,(POINTR2)
 LD BC,255
 LDIR
 POP HL
 LD BC,$FFFF
 LD A,EOL
 CPIR
 DEC HL
 LD (HL),0
 RET
;
C_COPYLN:CALL EDT
 CALL COPYSUB
 CALL INSERT
 CALL SWAPSUB
 CALL NEXT2
 CALL SWAPSUB
 CALL SETINFS
 CALL DISP
 CALL KEYREP
 JR Z,C_COPYLN
 JP MAIN2
;
C_MOVELN:CALL EDT
 CALL COPYSUB
 CALL INSERT
 CALL SWAPSUB
 CALL DELETE
 CALL SWAPSUB
 CALL DISP
 CALL KEYREP
 JR Z,C_MOVELN
 JP MAIN2
;
C_COME:
 CALL EDT
 LD HL,(POINTR)
 LD (POINTR2),HL
 LD A,(POSITION)
 LD (POSITION2),A
 JP MAIN
;
SETCURS:
 LD A,(DIVMODE)
 OR A
 JR Z,STC10
 LD A,(WINFLG)
 OR A
 JR Z,STC10
 LD A,(POSITION)
 CP 39
 JR C,STC10
 LD A,38
 LD (POSITION),A
;
 LD A,1
 LD B,10
STC08:SRV BELL
 SRV WAIT
 DJNZ STC08
 LD A,10
 SRV BELL
 LD A,1
 LD B,5
STC09:SRV BELL
 SRV WAIT
 DJNZ STC09
;
; LD A,7
; CALL CONOUT
 CALL DISPINF
STC10:LD A,(POSITION)
 INC A
 LD B,A
 LD A,(CURLINE)
 INC A
 LD C,A
 LD ($EA63),BC
 CALL CURON
 RET
;
KEYREP:
 CALL CUROFF
KEYREP2:
 LD HL,($EA63)
 PUSH HL
 CALL DISPINF
 POP HL
	LD	($EA63),HL
	DI
	ROMCALL	$BE2		;DISPLAY CURSOR
	EI
 KEEP HL,BC
 LD A,$FF
	LD	($EA59),A
	DI
	ROMCALL	$3A6		;
	EI
	LD	A,($EA6B)
	LD	B,A
KYRP10:	KEEP	BC
	CALL	KEYSCN
 KEEPOUT
 JR C,KYRP20
 JR NZ,KYRP20
 DJNZ KYRP10
 KEEP AF
 LD A,1
 LD ($EA6B),A
 KEEPOUT
KYRP20:KEEPOUT
 PUSH AF
 XOR A
 LD ($EA68),A
 POP AF
 CP 12
 PUSH AF
 CALL Z,DISPWRK
 POP AF
 RET
;
CANCEL:
 LD A,(OLDPOSITION)
 LD (POSITION),A
 JP MAIN
;
FORCE_FORM:
 CALL CHGON
 CALL EDT
 JP MAIN
;
CHGON:
 LD A,$FF
 LD (CHGFLG),A
 RET
;
EDT:
 LD A,(CHGFLG)
 OR A
 RET Z
;LD HL,(POINTR)
;LD A,(HL)
;CP $1E
;RET Z
;
 LD HL,INPUTBUF
 LD (BUFFER),HL
;
 LD HL,INPUTBUF+79
 LD B,80
EDT10:                                                         
 LD A,(HL)
 CP 32
 JR Z,EDT20
 OR A
 JR NZ,EDT30
EDT20: LD (HL),0
 DEC HL
 DJNZ EDT10
 INC HL
EDT30:
 LD HL,(BUFFER)
; CALL CHGCAP2
 CALL CLEARARROW
 LD A,(FORMFLG)
 OR A
 CALL NZ,FORMATBUF
 LD HL,(BUFFER)
 LD BC,0
 XOR A
 CPIR
 LD A,C
 NEG
 LD C,A
 LD B,0
 PUSH BC
 LD HL,(POINTR)
 LD BC,0
 LD A,EOL
 CPIR
 LD A,C
 NEG
 LD L,A
 LD H,0
 POP DE
 EX DE,HL
 OR A
 SBC HL,DE
; INC HL
; INC HL
 LD C,L
 LD B,H
 CALL CHKBUF
 CALL ADJPLUS
;
 LD HL,(POINTR)
 LD A,(HL)
 CP $1E
 CALL NZ,DELETEX
 LD HL,(POINTR)
 PUSH HL
; LD HL,(BUFFER)
; CALL CHGCAP2
; CALL CLEARARROW
; LD HL,(BUFFER)
; LD A,(FORMFLG)
; OR A
; CALL NZ,FORMATBUF
 CALL INSERTX
 POP HL
 LD (POINTR),HL
 XOR A
 LD (CHGFLG),A
 JP SETINFS
;
DELETEX:LD HL,(POINTR)
 XOR A
 LD BC,0
 CPIR
 PUSH HL
 LD HL,(POINTR)
 LD A,EOL
 LD BC,0
 CPIR ;"BC=neg(length)
 POP DE
 EX DE,HL
 OR A
 SBC HL,DE
 LD A,L
 DEC A
 OR H
 RET Z
 LD C,L
 LD B,H
 EX DE,HL
 LD DE,(POINTR)
 CALL LDIRP
 RET
;
DELETE:LD HL,(POINTR)
 XOR A
 LD BC,0
 CPIR
 PUSH HL
 LD HL,(POINTR)
 LD A,EOL
 LD BC,0
 CPIR ;"BC=neg(length)
 POP DE
 EX DE,HL
 OR A
 SBC HL,DE
 LD A,L
 DEC A
 OR H
 RET Z
 PUSH HL
 PUSH DE
 CALL ADJPLUS
 POP DE
 POP HL
 LD C,L
 LD B,H
 EX DE,HL
 LD DE,(POINTR)
 CALL LDIRP
 RET
;
BACK:
 CALL EDT
 LD HL,(POINTR)
 LD DE,(TXTTOP)
 PUSH HL
 OR A
 SBC HL,DE
 POP HL
 RET Z
 LD A,EOL
 LD BC,$FFFF
 DEC HL
 DEC HL
 CPDR
 INC HL
 INC HL
 LD (POINTR),HL
 RET
;
NEXTT:CALL EDT
NEXT2:
 LD HL,(POINTR)
 LD A,EOL
 LD BC,$FFFF
 CPIR
 LD A,(HL)
 OR A
 RET Z
 LD (POINTR),HL
 RET
;
TOP:CALL EDT
 LD HL,(TXTTOP)
 LD (POINTR),HL
 XOR A
 LD (POSITION),A
 JP MAIN
;
NEXT1:CALL NEXTT
 JP MAIN
BACK1:CALL BACK
 JP MAIN
NEXT10:LD B,10
NX:PUSH BC
 CALL NEXTT
 POP BC
 DJNZ NX
 JP MAIN
BACK10:LD B,10
BCK:PUSH BC
 CALL BACK
 POP BC
 DJNZ BCK
 JP MAIN
;
LAST:CALL EDT
 LD HL,(TXTTOP)
 XOR A
 LD (POSITION),A
 CALL SCHEND
 DEC HL
 LD (POINTR),HL
 CALL BACK
 JP MAIN
;
CHKBUF:
 PUSH BC
  LD HL,(POINTR)
  XOR A
  LD BC,0
  CPIR
 POP BC
 PUSH HL
 ADD HL,BC
 LD DE,(TXTTOP)
 OR A
 SBC HL,DE
 LD DE,(BUFSIZ)
 OR A
 SBC HL,DE
 POP HL
 RET C
 XOR A
 LD (POSITION),A
 JP QERR
;
INSERTX:
 LD HL,(BUFFER)
 XOR A
 LD BC,0
 CPIR
 LD A,C
 NEG
 LD C,A
 LD B,0
 CALL CHKBUF
 LD D,H
 LD E,L
 LD BC,(POINTR)
 OR A
 SBC HL,BC
 INC HL
 PUSH HL
 LD HL,(BUFFER)
 LD C,0
ISTX10:LD A,(HL)
 INC HL
 INC C
 OR A
 JR NZ,ISTX10
 LD B,0
 LD L,E
 LD H,D
 ADD HL,BC
 EX DE,HL
 PUSH BC
 POP IX
 POP BC
 CALL LDDRP
 PUSH IX
 POP BC
 LD HL,(BUFFER)
 LD DE,(POINTR)
 CALL LDIRP
 LD (POINTR),DE
 DEC DE
 LD A,EOL
 LD (DE),A
 RET
;
INSERT:
 LD HL,(BUFFER)
 XOR A
 LD BC,0
 CPIR
 LD A,C
 NEG
 LD C,A
 LD B,0
 CALL CHKBUF
 LD D,H
 LD E,L
 LD BC,(POINTR)
 OR A
 SBC HL,BC
 INC HL
 PUSH HL
 LD HL,(BUFFER)
 LD C,0
IST10:LD A,(HL)
 INC HL
 INC C
 OR A
 JR NZ,IST10
 LD B,0
 LD L,E
 LD H,D
 ADD HL,BC
 EX DE,HL
 PUSH BC
 POP IX
 POP BC
 CALL LDDRP
 PUSH IX
 POP BC
 CALL ADJPLUS
 LD HL,(BUFFER)
 LD DE,(POINTR)
 CALL LDIRP
 LD (POINTR),DE
 DEC DE
 LD A,EOL
 LD (DE),A
 RET
;
ADJPLUS:
;"input par is BC=size of expand
 LD IY,POINTR2
 CALL ADJPSUB
 LD IY,MARKB
 CALL ADJPSUB
 LD IY,MARKE
 JP ADJPSUB
;
ADJPSUB:
 LD HL,(POINTR)
 LD E,(IY+0)
 LD D,(IY+1)
 OR A
 SBC HL,DE
 RET NC
 EX DE,HL
 ADD HL,BC
 LD (IY+0),L
 LD (IY+1),H
 RET
;
;
ESCAPE:
 SRV BEEPOF
 CALL EDT
 CALL DISP
 CALL FK_RESTORE
 CALL FK_FRESH
 CALL DISPINF
 LD HL,(TXTTOP)
 XOR A
 LD BC,$FFFF
 CPIR
 DEC HL
 DEC HL
 DEC HL
 LD (HL),0
 CALL CURON
;
 LD BC,$0016
 SRV TEXTCUR
 LD B,10
ESC10:LD A,1
 SRV BELL
 LD A,1
 SRV WAIT
 DJNZ ESC10
 JP WARMM
;
 IF FILEVER
QERRM:
 LD HL,(KP1)
 LD (MARKB),HL
 LD HL,(KP2)
 LD (MARKE),HL
 ENDIF
QERR:
 LD B,25
 LD A,1
QERRL:SRV BELL
 SRV WAIT
 DJNZ QERRL
 LD A,25
 SRV BELL
 JP MAIN0
;
 IF FILEVER
;"quick commands/unsupport if Edt/Asm
;
CHKMARK:
 LD A,(MARKFLG)
 OR A
 RET Z
 LD HL,(MARKB)
 LD DE,(MARKE)
 SBC HL,DE
 CCF
 RET
;
MARKKP:CALL EDT
 LD HL,(MARKB)
 LD (KP1),HL
 LD HL,(MARKE)
 LD (KP2),HL
 RET
;
BLKHIDE:CALL EDT
 XOR A
 LD (MARKFLG),A
 JP MAIN
;
BLKBGN:CALL MARKKP
 LD HL,(POINTR)
 LD (MARKB),HL
 CALL CHKMARK
 JP C,QERRM
 LD A,(MARKFLG)
 OR 1
 LD (MARKFLG),A
 JP MAIN
;
BLKEND:CALL MARKKP
 LD HL,(POINTR)
 LD (MARKE),HL
 CALL CHKMARK
 JP C,QERRM
 LD A,(MARKFLG)
 OR 2
 LD (MARKFLG),A
 JP MAIN
;
RESQFLG:
 XOR A
 LD (QFLG),A
 JR MAIN2PS
;
;
MAIN2PS:JP MAIN2
;
BLKCOPY:
 LD DE,(POINTR)
 LD HL,(MARKB)
 DEC HL
 OR A
 SBC HL,DE
 JR NC,BLC10
 LD HL,(MARKE)
 OR A
 SBC HL,DE
 JP NC,QERR
BLC10:
 CALL EDT
 CALL CALBLKSIZ
 CALL CHKBUF
 PUSH HL
 CALL ADJPLUS
 POP HL
 PUSH HL
 PUSH BC
 LD DE,(POINTR)
 OR A
 SBC HL,DE
 LD C,L
 LD B,H
 POP DE
 POP HL
 PUSH DE
 PUSH HL
 ADD HL,DE
 EX DE,HL
 POP HL
 DEC HL
 DEC DE
 CALL LDDRP
 POP BC
 LD HL,(MARKB)
 LD DE,(POINTR)
 CALL LDIRP
 JP MAIN
;
BLKERASE:LD A,(MARKFLG)
 CP 3
 JP NZ,QERR
 CALL EDT
 CALL CALBLKSIZ
 CALL NEGBC
 PUSH BC
 LD HL,(MARKE)
 XOR A
 LD BC,0
 CPIR
 CALL NEGBC
 LD HL,(MARKE)
 LD DE,(MARKB)
 CALL LDIRP
 POP BC
 LD HL,(MARKB)
 LD (POINTR),HL
 CALL ADJPLUS
 XOR A
 LD (MARKFLG),A
 CALL SETINFS
 JP MAIN
;
CALBLKSIZ:LD DE,(MARKB)
 LD HL,(MARKE)
 OR A
 SBC HL,DE
 LD C,L
 LD B,H
 RET
;
NEGBC:
 LD A,C
 CPL
 LD C,A
 LD A,B
 CPL
 LD B,A
 INC BC
 RET
;
WRITEFILE:CALL EDT
 LD A,(MARKFLG)
 CP 3
 JP NZ,QERR
 LD IX,WWTBL
 CALL WWOPEN
 CALL DISPINF
 LD B,10
 LD C,3
 SRV TEXTCUR
 SRV CPRNXT
 DEFB "Write FILE NAME? ",0
 CALL CURON
 SRV CINLIN
 CALL CUROFF
 LD B,45
 LD C,3
 SRV TEXTCUR
 LD IX,FCB2
 SRV MAKFCB
 LD A,(IX+1)
 CP " "
 JP Z,QERR
 CALL SETAZA
 PUSH IX
 SRV CPRNXT
 DEFB "Saving block...",0
 POP IX
 LD A,1
 LD B,8
 LD HL,(DIOBUF)
 SRV OPEN
 LD HL,(MARKB)
WCLE10:LD A,(HL+)
 EX DE,HL
 LD HL,(MARKE)
 INC HL
 OR A
 SBC HL,DE
 EX DE,HL
 JR Z,WCLE40
 CP EOL
 JR Z,WCLE20
 SRV PUTCHR
 JR WCLE10
WCLE20:SRV PUTCRLF
 JR WCLE10
WCLE40:LD A,$1A
 SRV PUTCHR
 SRV CLOSE
;
 JP MAIN0
;
READFILE:CALL EDT
 LD IX,WWTBL
 CALL WWOPEN
 CALL DISPINF
 LD B,10
 LD C,3
 SRV TEXTCUR
 SRV CPRNXT
 DEFB "Read File (insertion),FILE NAME? ",0
 CALL CURON
 SRV CINLIN
 CALL CUROFF
 LD IX,FCB2
 SRV MAKFCB
 CALL SETAZA
 LD A,(IX+1)
 CP " "
 JP Z,QERR
 LD IY,DMYFCB  ;DUMMY FCB
 SRV SCHFST
 JP C,RFERR
 LD A,0
 LD B,8
 LD HL,(DIOBUF)
 SRV OPEN
 LD BC,0
RF100:CALL GETBIT
 JR NZ,RF100
 SRV CLOSE
 PUSH BC
 CALL CHKBUF
 LD E,L
 LD D,H
 LD BC,(POINTR)
 OR A
 SBC HL,BC
 INC HL
 EX (SP),HL
 ADD HL,DE
 EX DE,HL
 POP BC
 CALL LDDRP
 LD A,0
 LD B,8
 LD HL,(DIOBUF)
 SRV OPEN
 LD HL,(POINTR)
RF200:CALL GETBIT
 JR Z,RF300
 LD (HL+),A
 JR RF200
RF300:SRV CLOSE
  CALL SETINFS
 JP MAIN0
RFERR:
 LD IX,WWTBL
 CALL WWOPEN
 LD B,10
 LD C,3
 SRV TEXTCUR
 SRV CPRNXT
 DEFB "File not Found...push space bar *",29,0
RFE10:CALL CONIN
 CP 32
 JR NZ,RFE10
 JP MAIN0
;
GETBIT:SRV GETCHR
 CP 10
 JR Z,GETBIT
 CP $1A
 RET Z
 INC BC
 RET
;
;
WWTBL:DEFB 3,3,70,3
;
;"ix+0 pos x
;"ix+1 pos y
;"ix+2 size x
;"ix+3 size y
WWOPEN:
 LD B,(IX+0)
 LD C,(IX+1)
 LD ($EA63),BC
 LD A,""
 CALL PRCHR
 CALL WWPR1
 LD A,""
 CALL PRCHR
 INC C
WW10:LD B,(IX+0)
 LD ($EA63),BC
 LD A,""
 CALL PRCHR
 LD B,(IX+2)
 DEC B
 DEC B
 LD A,($EA5A)
WW20:CALL PRCHR
 DJNZ WW20
 LD A,""
 CALL PRCHR
 INC C
 LD A,(IX+3)
 ADD A,(IX+1)
 DEC A
 CP C
 LD B,(IX+0)
 LD ($EA63),BC
 JR NZ,WW10
 LD A,""
 CALL PRCHR
 CALL WWPR1
 LD A,""
 CALL PRCHR
 RET
;
WWPR1:LD B,(IX+2)
 DEC B
 DEC B
 LD A,""
WWPR1L:CALL PRCHR
 DJNZ WWPR1L
 RET
;
;
 ENDIF
;
;
FK_FRESH:
	XOR	A
	LD	($EA6A),A
	DI
	ROMCALL	$7C9
	EI
	RET
;
;
;
FK_INIT:
 LD HL,FK_AREA
 LD DE,FK_RESERVE
 LD BC,16*10
 LDIR
;
 LD DE,FK_DATA
 LD HL,FK_AREA
 LD B,10
 LD C,1
FKI10:
 PUSH HL
 LD (HL),12
 INC HL
 LD A,C
 AND 15
 ADD A,"0"
 LD (HL),A
 INC HL
	LD	(HL),$FE	;" "
 INC HL
FKI20:
 LD A,(DE)
 INC DE
 LD (HL),A
 INC HL
 OR A
 JR NZ,FKI20
 POP HL
 PUSH DE
 LD DE,16
 ADD HL,DE
 POP DE
 LD A,C
 ADD A,1
 DAA
 LD C,A
 DJNZ FKI10
 CALL CMWSUB
 JP INSREPSUB
;
;
;
;
FK_RESTORE:
 LD HL,FK_RESERVE
 LD DE,FK_AREA
 LD BC,16*10
 LDIR
 RET
;
;
;"input(B,C) as (x,y)
;"output HL:adr
VRAMAD:
 PUSH DE
 LD L,C
 LD H,0
 LD E,L
 LD D,H
 ADD HL,HL
 ADD HL,HL
 ADD HL,DE
 ADD HL,HL
 ADD HL,HL
 ADD HL,HL
 LD E,L
 LD D,H
 ADD HL,HL
 ADD HL,DE
 LD E,B
 LD D,0
 ADD HL,DE
 LD DE,$F300
 ADD HL,DE
 POP DE
 RET
;
;
CLS:
 LD A,(DIVMODE)
 OR A
 JR Z,CLS05
 LD A,(WINFLG)
 OR A
 JR Z,CLS05
 LD IX,120*25+$F300
 LD (IX+80),0
 LD (IX+82),39
 LD (IX+83),0
 LD (IX+84),41
CLS05:
; LD A,(CURLINE)
; LD C,A
; LD B,81
; CALL VRAMAD
; PUSH HL
; POP IX
; LD (IX+0),$20
 LD DE,$F300+120
 LD B,23
CLS10:
 PUSH BC
 LD HL,120*25+$F300
 LD BC,120
 LDIR
 POP BC
 DJNZ CLS10
 RET
;
;
CURON:LD A,$FF
 JR CUR10
CUROFF:XOR A
CUR10:LD ($EA5F),A
 RET
;
CLEARARROW:
 LD A,(HL+)
 OR A
 RET Z
 CP $1E
 JR NZ,CLEARARROW
 LD (-HL+),0
 JR CLEARARROW
;
FORMATBUF:
	LD	HL,INPUTBUF
	LD	DE,INPUTBUF+128
FRMBF10:
	LD	A,(HL+)
	OR	A
	JP	Z,FRMEEE
	CP	EOL
	JP	Z,FRMECR
	CP	";"
	JP	Z,FRMCOMENT2
	CP	9
	JR	Z,FRMBF11
	CP	32		;IF FIRST CHR IS BLANK
	JR	NZ,FRMBF20
FRMBF11:	LD	A,9	;THEN SET TAB CODE
	LD	(DE+),A
FRMBF13:	LD	A,(HL+)
	CP	32		;AND SKIP UNTIL MNEMONIC
	JR	Z,FRMBF13
	CP	9
	JR	Z,FRMBF13
	JR	FRMBF40
FRMBF20:	LD	(DE+),A	;IN CASE OF LABEL EXIST
FRMBF22:	LD	A,(HL+)
	OR	A
	JP	Z,FRMEEE
	CP	EOL
	JP	Z,FRMECR
	CP	";"
	JP	Z,FRMCOMENT
	CP	32
	JR	Z,FRMBF30
	CP	9
	JR	Z,FRMBF30
	LD	(DE+),A
	CP	":"
	JR	NZ,FRMBF22
FRMBF30:
	LD	A,9
	LD	(DE+),A		;FILLS TAB CODE AFTER LABEL
FRMBF32:LD A,(HL+)
	CP	32		;SKIPS BLANKS
	JR	Z,FRMBF32
	CP	9
	JR	Z,FRMBF32
FRMBF40:        ;GET MNEMONIC 1ST CHR
	OR	A
	JP	Z,FRMEEE
	CP	EOL
	JP	Z,FRMECR
	CP	";"
	JP	Z,FRMCOMENT2
	LD	(DE+),A
FRMBF50:        ;GET MNEMONIC 2ND CHR TO END
	LD	A,(HL+)
	OR	A
	JP	Z,FRMEEE
	CP	EOL
	JP	Z,FRMECR
	CP	";"
	JP	Z,FRMCOMENT
	CP	32
	JR	Z,FRMBF55
	CP	9
	JR	Z,FRMBF55
	LD	(DE+),A
	JR	FRMBF50
FRMBF55:
	LD	A,9
	LD	(DE+),A
FRMBF60:
	LD	A,(HL+)
	OR	A
	JP	Z,FRMEEE
	CP	EOL
	JP	Z,FRMECR
	CP	";"
	JP	Z,FRMCOMENT
	CP	32
	JR	Z,FRMBF60
	CP	9
	JR	Z,FRMBF60
	JR	FRMBF72		;OPERAND 1ST CHR
FRMBF70:	LD	A,(HL+)	;OPERAND 2ND CHR TO END
FRMBF72:	OR	A
	JP	Z,FRMEEE
	CP	EOL
	JP	Z,FRMECR
	CP	";"
	JP	Z,FRMCOMENT
	CP	32
	JR	Z,FRMBFSPC
	CP	9
	JR	Z,FRMBFSPC
	CP	'"'
	JR	Z,FRMBFRR
	CP	"'"
	JR	Z,FRMBFRR
FRMBF79:	
	LD	(DE+),A
	JR	FRMBF70
FRMBFSPC:	
	LD	C,A
	PUSH	HL
FRMS10:	LD	A,(HL+)
	CP	32
	JR	Z,FRMS10
	CP	9
	JR	Z,FRMS10
	CP	";"
	JR	Z,FRMSERR
	CP	EOL
	JR	Z,FRMSECR
	OR	A
	POP	HL
	JR	Z,FRMEEE
	LD	A,C
	JR	FRMBF79
FRMSERR:	
	POP	BC
	JP	FRMCOMENT
FRMSECR:	
	POP	AF
	JP	FRMEC1
;
FRMBFRR:LD (DE+),A      ;SKIPS LITERAL CONSTANT
	LD	B,A
FRMRR10:LD A,(HL+)
	OR	A
	JP	Z,FRMEEE
	CP	EOL
	JP	Z,FRMECR
	LD	(DE+),A
	CP	B
	JR	NZ,FRMRR10
	JR	FRMBF70
;
FRMBF80:	
	LD	A,(HL+)		;SKIPS BEFORE COMMENT
	OR	A
	JP	Z,FRMEEE
	CP	EOL
	JP	Z,FRMECR
	CP	32
	JR	Z,FRMBF80
	CP	9
	JR	Z,FRMBF80
FRMCOMENT:	;COMMENT OR SUCH AS THAT
	PUSH	AF
	XOR	A
	LD	(DE),A
	PUSH	HL
	PUSH	DE
	CALL	CALCPOS
	POP	DE
	POP	HL
	LD	A,4*8
	SUB	B
	JR	C,FRMC10
	PUSH	AF
	LD	A,9
	LD	(DE+),A
	POP	AF
FRMC01:
	SUB	8
	JR	C,FRMC11
	JR	Z,FRMC11
	EX	DE,HL
	LD	(HL+),9
	EX	DE,HL
	JR	FRMC01
FRMC10:	LD	A," "
	LD	(DE+),A
FRMC11:	POP	AF
FRMCOMENT2:	
	LD	(DE+),A
FRMC20:	LD	A,(HL+)
	OR	A
	JR	Z,FRMEEE
	LD	(DE+),A
	JR	FRMC20
FRMECR:	LD	(DE+),A
FRMEC1:	LD	A,(HL+)
	LD	(DE+),A
	OR	A
	JR	NZ,FRMEC1
	DEC	DE
FRMEEE:	EX	DE,HL
	LD	(HL),0
	LD	HL,INPUTBUF+128
	LD	DE,INPUTBUF
	LD	BC,127
	LDIR
	RET
;
CALCPOS:
 LD HL,INPUTBUF+128
 LD B,0
CLPOS:LD A,(HL+)
 OR A
 RET Z
 INC B
 CP 9
 JR NZ,CLPOS
 DEFB $3E   ;TO SKIP NEXT ONE BYTE(INC B)
CLPOS20:INC B
 LD A,B
 AND 7
 JR Z,CLPOS
 JR CLPOS20
;
 IF 0
ADJPNT:  ;DIVIDE POINTR INTO (POINTR POSITION)
 LD HL,(POINTR)
 LD A,EOL
 LD BC,0
 DEC HL
 CPDR
 LD (POINTR),++HL
 INC BC
 LD A,C
 NEG
 LD (POSITION),A
 RET
ADJPNT2:  ;RE-MAKE POSITION BY THE TAB CODE
 LD HL,(POINTR)
 LD A,(POSITION)
 INC A
 LD B,A
 LD C,0
AP10:LD A,(HL+)
 DEC B
 JR Z,AP50
 CP EOL
 JR Z,AP50
 INC C
 CP 9
 JR NZ,AP10
AP20: LD A,C
 AND 7
 JR Z,AP10
 INC C
 JR AP20
AP50:
 LD A,C
 LD (POSITION),A
 RET
 ENDIF
;                                                                  
CHGCAP:
 LD HL,INPUTBUF
CHGCAP2:
 XOR A
 LD C,A
CH10:
 LD A,(HL)
 OR A
 RET Z
 CP $1E
 JR NZ,CH15
 LD A," "
CH15:
 CP 34
 JR Z,CH70
 LD B,A
 LD A,C
 OR A
 LD A,B
 JR NZ,CH20
 CALL UPPER
CH20:LD (HL),A
CHE:INC HL
 JR CH10
CH70:LD A,C
 CPL
 LD C,A
 JR CHE
;
UPPER:
 CP "a"
 RET C
 CP "z"+1
 RET NC
 SUB 32
 RET
;
;
;"if C then error
TESTAZ:
 CP "@"
 RET C
 CP "Z"+1
 CCF
 RET
;
TEST09:
 CP "0"
 RET C
 CP "9"+1
 CCF
 RET
;
TESTAN:
 CALL UPPER
 CALL TESTAZ
 RET NC
 CALL TEST09
 RET NC
 CP "_"
 RET Z
 CP "."
 RET Z
 CP "$"
 RET Z
 SCF
 RET
;
SCHEND:
 PUSH BC
 LD HL,(TXTTOP)
 LD BC,0
 XOR A
 CPIR
 POP BC
 RET
;
;"if nC then error
CHGHEX:
 SUB $30
 CP 10
 RET C
 SUB 7
 CP 16
 RET
;
GENHEX:
 ADD $30
 CP $3A
 RET C
 ADD 7
 RET
;
CPHLDE:
 LD A,E
 SUB L
 RET NZ
 LD A,D
 SUB H
 RET
;
;
CASE:PUSH BC
 LD B,A
 LD A,(CASEFLG)
 OR A
 LD A,B
 JR Z,CASE20
 CP "A"
 JR C,CASE10
 CP "Z"+1
 JR NC,CASE10
 ADD A,$20
 JR CASE20
CASE10:CP "a"
 JR C,CASE20
 CP "z"+1
 JR NC,CASE20
 SUB $20
CASE20:POP BC
 RET
;
CAPSLOCK:
 LD A,(CASEFLG)
 OR A
 LD A,1
 JR Z,CPSL
 XOR A
CPSL:LD (CASEFLG),A
 JP MAIN2
CASEFLG:DEFB 1
;
CVKEYMAC:
 KEEP HL,BC
 LD B,A
 CALL KMSCH
 CP $FF
 LD A,B
 JR Z,NOTCV
 INC HL
 LD A,(HL)
NOTCV:KEEPOUT
 RET
;
CONIN:SRV CINCHR
 CALL CASE ;IF CAPS LOCK THEN TO UPPER
 CALL CVKEYMAC
 RET
;
;
;
;                                                                            
WARMM:DEFB $EF,WARM
;
PRCHR:
CONOUT:	DI
	ROMCALL	$257
	EI
	RET
PRCRLF:	LD	A,$D
	CALL	CONOUT
	LD	A,$A
	JP	CONOUT
PRDEC:	DI
	ROMCALL	$2D13
	EI
	RET
PR4HEX:	DI
	ROMCALL	$5EC0
	EI
	RET
PRSTR:	LD	A,(HL+)
	OR	A
	RET	Z
	CALL	CONOUT
	JR	PRSTR
CRTC:	XOR	A
	SRV	TEXTINI
	RET
;
BEEPSW:
	PUSH	AF
	LD	A,(SSW)
	OR	A
	JR	Z,BPON10
	SRV	BEEPON
BPON10:	POP	AF
	RET
;
PDEC:
 LD DE,DECBUF
 CALL CNVDEC
 LD C,0
 CALL VRAMAD
 LD B,5
PDC10:LD A,(DE+)
 CP "0"
 JR NZ,PDC20
 LD A,"_"
 LD (HL+),A
 DJNZ PDC10
 LD (-HL),"0"
 RET
PDC30:LD A,(DE+)
PDC20:LD (HL+),A
 DJNZ PDC30
 RET
;
;"input DE:outbuf,HL:value
CNVDEC:
 PUSH IY
 PUSH HL
 PUSH DE
 PUSH BC
 PUSH AF
 LD IY,DECTBL
 LD B,5
SPD10:LD C,0-1
 PUSH DE
 LD E,(IY+0)
 LD D,(IY+1)
 INC IY
 INC IY
SPD20:INC C
 OR A
 SBC HL,DE
 JR NC,SPD20
 ADD HL,DE
 POP DE
 LD A,C
 ADD A,$30
 LD (DE),A
 INC DE
 DJNZ SPD10
 POP AF
 POP BC
 POP DE
 POP HL
 POP IY
 RET
;
DECTBL:
 DEFW 10000
 DEFW 1000
 DEFW 100
 DEFW 10
 DEFW 1
;
DECBUF:DEFS 5
;
KEYSCN:	KEEP	IX
	LD	IX,CONFCB
	SRV	CINSCN
	KEEPOUT
	RET
;
DBGCMD:	CALL	DISVERT
	JP	MAIN
;
FK_DATA:
INSMES:
 DEFB "INS/rep",0
 DEFB "swapPTR",0
 DEFB 29,"word",0
 DEFB "word",28,0
 DEFB "newline",0
;
 DEFB "DEL ln",0
 DEFB "MW "
ONMES:
 DEFB "on ",0
 DEFB "COPY ln",0
 DEFB "MOVE ln",0
 DEFB "COME sub",0
;
REPMES:DEFB "ins/REP"
OFFMES:DEFB "off"
;
FK_RESERVE:
 DEFS 16*10
;
CONFCB:	DEFB	$F0
	DEFS	35
;
FCB1:DEFS 36
FCB2:DEFS 36
DMYFCB:DEFS 36
;                                                  
DIOBUF:DEFS 2
INF1:DEFS 2
INF2:DEFS 2
;                                                        
ZZZZZZ:
.DEPHASE
 END 
