;"module of sccmd.aza
;
COLDENT:
COLDST:
; LD SP,STACK
	PUSH	HL
	IF	DEBUG
	LD	HL,ZZZZZZ+1
	ELSE
	IF	FILEVER
	LD	HL,ZZZZZZ+1
	ELSE
	LD	HL,ZZZZZZ/256*256+256+1 ;ZZZZZZ and $ff00+$100+1
	ENDIF
	ENDIF
	LD	(TXTTOP),HL
	LD	(POINTR),HL
	LD	(POINTR2),HL
	SRV	ALOMAP
	LD	A,(IY+2)
	CP	"N"
	JR	Z,VERSOK
	AND	1
	JP	NZ,VERSERR
VERSOK:
;
	LD	E,(IY+12)
	LD	D,(IY+13)
	LD	(DIOBUF),DE	;GET BUFFER
	IF	FILEVER
	LD	E,(IY+10)
	LD	D,(IY+11)	;UCA END ADRS
	ELSE
	LD	DE,$9000
	ENDIF
	EX	DE,HL
	OR	A
	SBC	HL,DE
	LD	(BUFSIZ),HL
	CALL	CLRTXTSUB
; XOR A
; LD (CASEFLG),A
	IF	FILEVER
	ELSE
	CALL	AZACHK
	CALL	AZATOP+18
	ENDIF
	POP	HL
	IF	DEBUG
	SRV	CPRNXT
	DEFB	"File Name:",0
	SRV	CINLIN
	ENDIF
LOADTXT:
	LD	IX,FCB1
	SRV	MAKFCB
	LD	A,(IX+1)
	CP	" "
	JP	Z,NONAM
	CALL	SETAZA
	SRV	CPRNXT
	DEFB	"Loading Text...",$D,$A,0
;
	CALL	FASTLOAD
	JR	C,COLDNEW	;NOT FOUND
	JP	NZ,LOADNEXT	;LOAD OK!
;
	LD	B,8
	LD	A,0		;CHR INPUT
	LD	HL,(DIOBUF)
	SRV	OPEN
	JR	C,COLDNEW
;
	LD	BC,(BUFSIZ)
	DEC	BC
	LD	HL,(TXTTOP)
COLD05:
	SRV	GETCHR
	CP	10
	JR	Z,COLD05
	CP	$1A
	JR	Z,COLD10
	LD	(HL+),A
	DEC	BC
	LD	A,C
	OR	B
	JR	NZ,COLD05
;
	SRV	CPRNXT
	DEFB	"Out of Edit Buffer, TEXT File is too Large.",7,$D,$A,0
	SRV	CLOSE
	JR	SERCOM
;
COLD10:
	LD	(HL),0
	SRV	CLOSE
LOADNEXT:
	JR	COLDSS
;
NONAM:	SRV	CPRNXT
	DEFB	"No File Name",7,$D,$A,0
SERCOM:	XOR	A
	LD	($100),A
	SRV	WARM
;
COLDNEW:	CALL	CLRTXTSUB
	SRV	CPRNXT
	DEFB	$D,$A
	DEFB	"***** New File *****",7,$D,$A
	DEFB	"    SURE (Y/N)? ",0
	SRV	CINCHR
	CALL	UPPER
	CP	"N"
	JR	Z,SERCOM
	SRV	CPRCRLF
COLDSS:
;
	SRV	CPRNXT
	IF	FILEVER
	DEFB	$D,$A,"SOCE Editer"
	ELSE
	DEFB	$D,$A,"EA"
	ENDIF
	DEFB	" V1.4"
	DEFB	252,252,252,$D,$A,$A,0
	XOR	A
	LD	(POSITION),A
; LD (WINFLG),A
STATCMD:
	CALL	STATUS
WARMST:
	LD	SP,STACK
	CALL	PRCRLF
	JP	WARMM
;
SPKEP:	DEFW	0
;
RETFILT:	LD	HL,(FILTKEP)
	LD	SP,(SPKEP)
	RET
FILTENT:
COMAND:
CMD100:
	LD	(FILTKEP),HL
	LD	(SPKEP),SP
	LD	A,(HL)
	INC	HL
	CALL	UPPER
	OR	A
	JR	Z,RETFILT
	CP	32
	JR	Z,CMD100
	CP	"$"
	JR	Z,CMD100
	CP	"?"
	JR	Z,CMD100
	CP	"."
	JR	Z,STATCMD
	CP	"E"
	JP	Z,EDTCMD
	CP	"F"
	JP	Z,FINDCMD
	IF	FILEVER
	ELSE
	CP	"A"
	JP	Z,AZA
	CP	"Z"
	JP	Z,AZA
	CP	"Q"
	JP	Z,AZA999
	ENDIF
	CP	"C"
	JP	Z,CLRTXT
	CP	"B"
	JP	Z,CHGTXT
	CP	"L"
	JP	Z,LODTXT
	CP	"S"
	JP	Z,SAVTXT
	CP	"H"
	JP	Z,HDIV
	CP	"V"
	JP	Z,VDIV
	CP	"T"
	JP	Z,FORMSW
	CP	"N"
	JP	Z,NECSW
	CP	"M"
	JP	Z,MARK
	CP	"K"
	JP	Z,KEYMACS
	CP	"!"
	JP	NZ,RETFILT
	CALL	CLOSEENT
	IF	DEBUG
	SRV	DOSCMD
	ELSE
	SRV	WARM
	ENDIF
;
SAVE1SUB:
	LD	IX,FCB1
	LD	DE,FCB2
	LD	B,12
COLD20:	LD	A,(IX+0)
	INC	IX
	LD	(DE+),A
	DJNZ	COLD20
	LD	IX,FCB2
	CALL	SETBAK
	SRV	CPRNXT
	DEFB	"Making Backup File",$D,$A,0
COLD30:	LD	IX,FCB1
	LD	IY,FCB2
	SRV	RENAME
	JR	NC,SAVE2SUB
	CP	1
	JR	NZ,SAVE2SUB
	LD	IX,FCB2
	SRV	ERASE
	JR	NC,COLD30
INTERR:	SRV	CPRNXT
	DEFB	"Inter err",$D,$A,0
	JP	SERCOM
SAVE2SUB:
	LD	IX,FCB1
	SRV	DSKFRE
	LD	A,H
	OR	A
	JR	NZ,SAVE3SUB
	LD	H,L
	LD	L,0
	CALL	TEXTFILESIZE
	OR	A
	SBC	HL,BC
	JR	NC,SAVE3SUB
	SRV	CPRNXT
	DEFB	"DISK FULL!!!!!!",$D,$A,7
	DEFB	">>> DELETING Backup File",$D,$A,0
	LD	IX,FCB2
	SRV	ERASE
	LD	IX,FCB1
	JR	NC,SAVE3SUB
	JP	INTERR
;
SAVE3SUB:
	SRV	CPRNXT
	DEFB	"Saving Text...",$D,$A,0
	LD	A,(NECFLG)
	OR	A
	JR	NZ,S3S10
	CALL	FASTSAVE
	RET	NC
S3S10:	LD	A,1
	LD	B,8
	LD	HL,(DIOBUF)
	SRV	OPEN
	LD	HL,(TXTTOP)
CLE10:	LD	A,(HL+)
	OR	A
	JR	Z,CLE40
	CP	EOL
	JR	Z,CLE20
	SRV	PUTCHR
	JR	CLE10
CLE20:	SRV	PUTCRLF
	JR	CLE10
CLE40:	LD	A,$1A
	SRV	PUTCHR
	SRV	CLOSE
	RET
;
CLOSEENT:
	PUSH	IX
	PUSH	HL
	PUSH	DE
	PUSH	BC
	PUSH	AF
	CALL	SAVE1SUB
;
	XOR	A
	LD	($100),A
	POP	AF
	POP	BC
	POP	DE
	POP	HL
	POP	IX
	RET
;
OPTENT:
	SRV	CPRNXT
	IF	FILEVER
	DEFB	"*ed READY.",252,$D,$A,0
	ELSE
	DEFB	"*ea READY.",252,$D,$A,0
	ENDIF
	RET
;
AZA:
	PUSH	HL
	CALL	AZACHK
	POP	HL
	JP	AZATOP+9
AZA999:
	CALL	AZACHK
	JP	AZATOP+15
AZACHK:
	LD	HL,AZATOP+6
	LD	A,(HL)
	CP	"A"
	JP	NZ,UNDERR
	INC	HL
	LD	A,(HL)
	CP	"z"
	JP	NZ,UNDERR
	INC	HL
	LD	A,(HL)
	CP	"a"
	JP	NZ,UNDERR
	RET
;
SKIPNXT:
;"DE=scan str
;"HL=pointr
;"destroy B reg
	LD	A,(DE+)
	OR	A
	RET	Z
	LD	B,A
	LD	A, (HL+)
	CALL	UPPER
	CP	B
	JR	Z,SKIPNXT
	JP	RETFILT
;
SKIPSPC:	LD	A,(HL+)
	CP	32
	JR	Z,SKIPSPC
	DEC	HL
	RET
;
CLRTXT:
	LD	A,(HL)
	CALL	UPPER
	CP	"O"
	JP	Z,CONFIG
	LD	DE,LEARMES
	CALL	SKIPNXT
	CALL	CLRTXTSUB
	XOR	A
	LD	($100),A
	SRV	WARM
LEARMES:	DEFB	"LEAR",0
;
CLRTXTSUB:
	LD	HL,(TXTTOP)
	LD	(POINTR),HL
	LD	(POINTR2),HL
	LD	(HL),EOL
	INC	HL
	XOR	A
	LD	(HL),A
	LD	(POSITION),A
	LD	(POSITION2),A
	LD	(MARKFLG),A
	RET
;
;
CHGTXT:
	LD	DE,UFMES
	CALL	SKIPNXT
	CALL	SKIPSPC
	CALL	GETDEC
	LD	(BUFSIZ),IX
	CP	","
	JP	NZ,WARMM
	CALL	GET4H
	PUSH	IX
	POP	BC
	LD	A,B
	OR	C
	JR	Z,CHGTXEE
	INC	IX
	LD	(TXTTOP),IX
	LD	(POINTR),IX
	LD	(POINTR2),IX
	XOR	A
	LD	(POSITION),A
	LD	(POSITION2),A
CHGTXEE:	SRV	WARM
UFMES:	DEFB	"UF",0
;
LODTXT:	LD	DE,OADMES
	CALL	SKIPNXT
	PUSH	HL
	CALL	SAVE1SUB
	CALL	CLRTXTSUB
	POP	HL
	JP	LOADTXT
;
SOUNDSW:
	INC	HL
	LD	A,(HL+)
	CALL	UPPER
	CP	"F"
	JR	Z,SSWOFF
	CP	"N"
	JP	NZ,RETFILT
	DEFB	$3E
SSWOFF:	XOR	A
	LD	(SSW),A
	SRV	WARM
;
SSW:	DEFB	1
;
SAVTXT:
	LD	A,(HL)
	CALL	UPPER
	CP	"O"
	JR	Z,SOUNDSW
	CP	"E"
	JP	Z,SETFT
	LD	DE,AVEMES
	CALL	SKIPNXT
	LD	IX,FCB2
	SRV	MAKFCB
	LD	IY,FCB1
	LD	A,(IX+0)
	OR	A
	CALL	Z,TRNDVS
	LD	A,(IX+1)
	CP	" "
	CALL	Z,TRNFN
	LD	A,(IX+9)
	CP	" "
	CALL	Z,TRNFT
	CALL	SAVE3SUB
	SRV	WARM
;
OADMES:	DEFB	"OAD",0
AVEMES:	DEFB	"AVE",0
DIVMES:	DEFB	"DIV",0
BAKKMES:	DEFB	"BAK",0
;
SETFT:
	INC	HL
	LD	A,(HL+)
	CALL	UPPER
	CP	"T"
	JP	NZ,RETFILT
	LD	A,(HL)
	CALL	UPPER
	CP	"F"
	JR	Z,SETFT0
	LD	DE,BAKKMES
	CALL	SKIPNXT
	LD	DE,BAKMES
	JR	SETFTCOM
SETFT0:
	INC	HL
	LD	A,(HL+)
	CALL	UPPER
	CP	"T"
	JP	NZ,RETFILT
	LD	DE,AZAMES
SETFTCOM:
	LD	A,(HL+)
	OR	A
	JP	Z,RETFILT
	CP	" "
	JR	Z,SETFTCOM
	DEC	HL
	KEEP	DE
	LD	B,3
	LD	A," "
SETFT05:
	LD	(DE+),A
	DJNZ	SETFT05
	KEEPOUT
	LD	B,3
SETFT10:
	LD	A,(HL+)
	OR	A
	JR	Z,SETFT20
	LD	(DE+),A
	DJNZ	SETFT10
SETFT20:
	SRV	WARM
;
VDIV:	DEFB	$3E
HDIV:	XOR	A
	PUSH	AF
	LD	DE,DIVMES
	CALL	SKIPNXT
	POP	AF
	LD	(DIVMODE),A
	CALL	RESWIN
	SRV	WARM
DIVMODE:	DEFB	1
;
FORMSW:	LD	A,(HL+)
	CALL	UPPER
	CP	"O"
	JP	NZ,RETFILT
	LD	A,(HL+)
	CALL	UPPER
	CP	"F"
	JR	Z,FSWOFF
	CP	"N"
	JP	NZ,RETFILT
	DEFB	$3E
FSWOFF:	XOR	A
	LD	(FORMFLG),A
	SRV	WARM
FORMFLG:	DEFB	1
;
NECSW:	LD	A,(HL+)
	CALL	UPPER
	CP	"E"
	JP	NZ,RETFILT
	LD	A,(HL+)
	CALL	UPPER
	CP	"C"
	JP	NZ,RETFILT
NECS10:	LD	A,(HL+)
	CP	32
	JR	Z,NECS10
	CP	9
	JR	Z,NECS10
	CALL	UPPER
	CP	"O"
	JP	NZ,RETFILT
	LD	A,(HL+)
	CALL	UPPER
	CP	"F"
	JR	Z,NECSWOFF
	CP	"N"
	JP	NZ,RETFILT
	DEFB	$3E
NECSWOFF:	XOR	A
	LD	(NECFLG),A
	SRV	WARM
NECFLG:	DEFB	0
;
MARK:	LD	DE,ARKMES
	CALL	SKIPNXT
	LD	HL,(ERRMARK)
	LD	DE,(TXTTOP)
	ADD	HL,DE
	LD	(POINTR),HL
	CALL	ADJPNT
	SRV	WARM
ARKMES:	DEFB	"ARK",0
;
TRNDVS:	LD	A,(IY+0)
	LD	(IX+0),A
	RET
TRNFN:	PUSH	IY
	PUSH	IX
	POP	DE
	POP	HL
	INC	DE
	INC	HL
	LD	BC,8
	LDIR
	RET
TRNFT:	PUSH	IX
	LD	BC,9
	POP	HL
	ADD	HL,BC
	EX	DE,HL
	PUSH	IY
	POP	HL
	ADD	HL,BC
	LD	BC,3
	LDIR
	RET
;
GET4H:
	LD	IX,0
CTX100:
	LD	A,(HL)
	INC	HL
	CALL	UPPER
	CALL	CHGHEX
	RET	NC
	ADD	IX,IX
	ADD	IX,IX
	ADD	IX,IX
	ADD	IX,IX
	LD	E,A
	LD	D,0
	ADD	IX,DE
	JR	CTX100
;
GETDEC:
	LD	IX,0
GDC100:
	LD	A,(HL)
	INC	HL
	CALL	TEST09
	RET	C
	SUB	"0"
	PUSH	IX
	POP	DE
	ADD	IX,IX
	ADD	IX,IX
	ADD	IX,DE
	ADD	IX,IX
	LD	E,A
	LD	D,0
	ADD	IX,DE
	JR	GDC100
;
;
UNDERR:	LD	HL,UNDMES
	JR	ERRORS
ERRORS:
	CALL	PRCRLF
	CALL	PRSTR
	CALL	PRCRLF
	JP	WARMM
;
UNDMES:	DEFB	"Undef",0
;
RESWIN:	LD	HL,PAR0
	LD	DE,PARC
	LD	BC,5
	LDIR
	XOR	A
	LD	(WINFLG),A
	RET
;
FASTLOAD:
;INPUT PARAMS -> IX:[FCB]
;OUTPUT PARAMS -> C flag = NOT FOUND
;                 Z flag = CANNOT LOAD
;
	LD	IY,FCB2
	SRV	SCHFST
	RET	C		;NOT FOUND
; PUSH IY
; POP IX
	LD	A,2		;RANDOM FILE
	LD	B,8
	LD	HL,(DIOBUF)
	SRV	OPEN
	SRV	LOF		;SIZE OF FILE
	INC	HL		;CHANGE BASE 0 TO 1
	LD	C,L
	LD	B,H
	LD	A,H
	OR	A
	JP	NZ,CANNOTFASTLOAD ;CANNOT LOAD(Z and NC) ,TOO LARGE FILE
	LD	H,L
	LD	L,0
	ADD	HL,HL		;2x
	ADD	HL,HL		;4x
	ADD	HL,HL		;8x -> 8 sectors per record
	IF	0
	KEEP	AF,HL,BC
	SRV	CPRNXT
	DEFB	"FILE SIZE WHEN FAST LOAD IS ",0
	SRV	CPRDEC
	SRV	CPRNXT
	DEFB	" AND SECTOR IS ",0
	LD	L,H
	LD	H,0
	SRV	CPRDEC
	SRV	CPRCRLF
	KEEPOUT
	ENDIF
	EX	DE,HL
	LD	HL,(BUFSIZ)
	DEC	HL		;MOSIMONO YOYU*2
	DEC	HL
	OR	A
	SBC	HL,DE
	JR	C,CANNOTFASTLOAD
;
;  LOADER BODY
;
	LD	DE,0
	LD	HL,(TXTTOP)
FSTLD10:
	PUSH	BC
	PUSH	DE
	PUSH	HL
	SRV	SETBUF
	EX	DE,HL
	SRV	SETREC
	SRV	GETREC
	POP	HL
	LD	DE,8*256
	ADD	HL,DE
	POP	DE
	INC	DE
	POP	BC
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,FSTLD10
	LD	(HL),$1A	;MOSHIMONO TOKI
	SRV	CLOSE
;
	CALL	TEXTPUCK
;
	LD	A,$FF
	OR	A		;(NZ,NC)
	RET
;
CANNOTFASTLOAD:
	SRV	CLOSE
	XOR	A		; (Z and NC)
	RET
;
TEXTPUCK:
; for FAST LOADER
;    ( deleteing LF code )
	LD	HL,(TXTTOP)
	LD	E,L
	LD	D,H
TXPK10:
	LD	A,(HL+)
	CP	$0A		;LINE FEED
	JR	Z,TXPK10
	LD	(DE+),A
	CP	$1A
	JR	NZ,TXPK10
	EX	DE,HL
	LD	(-HL),0
	RET
;
TEXTUNPUCK:
	CALL	TEXTMV
	LD	DE,(TXTTOP)
;
;UNPUCK BODY
UNPK10:
	LD	A,(HL+)
	CP	EOL
	JR	NZ,UNPK20
	LD	(DE+),A
	LD	A,$0A
UNPK20:
	LD	(DE+),A
	CP	0		;EOF
	JR	NZ,UNPK10
	EX	DE,HL
	LD	(-HL),$1A	;EOF
	RET
;
TEXTMV:
;TEXT END
	CALL	SCHEND
	DEC	HL
	PUSH	HL
;TEXT SIZE
	INC	HL
	LD	DE,(TXTTOP)
	OR	A
	SBC	HL,DE
	PUSH	HL
;TEXT AREA END
	LD	HL,(TXTTOP)
	LD	DE,(BUFSIZ)
	ADD	HL,DE
	DEC	HL
	PUSH	HL
	POP	DE		;TEXT AREA END
	POP	BC		;TEXT SIZE
	POP	HL		;TEXT END
	CALL	LDDRP
	EX	DE,HL
	INC	HL
	RET			;RET ANS IS MOVED TEXT TOP:[HL]
;
TEXTFILESIZE:
; ANS IN [BC]
	KEEP	HL
	LD	HL,(TXTTOP)
	LD	BC,0
SV2S10:	LD	A,(HL+)
	OR	A
	JR	Z,SV2S40
	CP	EOL
	JR	Z,SV2S20
	INC	BC
	JR	SV2S10
SV2S20:	INC	BC
	INC	BC
	JR	SV2S10
SV2S40:	INC	BC
	KEEPOUT
	RET
;
FASTSAVE:
; ANS C THEN SAVE NG!
	CALL	TEXTFILESIZE
	LD	E,C
	LD	D,B
	LD	HL,(BUFSIZ)
	DEC	HL
	OR	A
	SBC	HL,DE
	RET	C
	LD	A,D
;   AND %1111$1000
	SRL	A
	SRL	A
	SRL	A
	INC	A
	PUSH	AF
	CALL	TEXTUNPUCK
	LD	A,2
	LD	B,8
	LD	HL,(DIOBUF)
	SRV	OPEN
	POP	BC
	LD	HL,(TXTTOP)
	LD	DE,0
FSSV10:
	PUSH	BC
	PUSH	DE
	PUSH	HL
	SRV	SETBUF
	EX	DE,HL
	SRV	SETREC
	SRV	PUTREC
	POP	HL
	LD	DE,8*256
	ADD	HL,DE
	POP	DE
	INC	DE
	POP	BC
	DJNZ	FSSV10
	SRV	CLOSE
;
	CALL	TEXTPUCK
	XOR	A		;NC
	RET
;
;
CONFIG:
	LD	DE,ONFIGMES
	CALL	SKIPNXT
	LD	IX,FCB2
	SRV	MAKFCB
	LD	A,(IX+1)
	CP	" "
	JP	Z,RETFILT
; JR NZ,CNFG10
; LD IX,$5C  ;CURRENT FCB( EDITER FILE NAME IS  THERE)
;CNFG10:
;
	LD	A,1		;OUTPUT
	LD	B,8		;BUFFER SIZE
	LD	HL,(DIOBUF)
	LD	(IX+12),1	;IMG FILE
	SRV	OPEN
;
	LD	HL,COMMAND
	PUSH	HL
	CALL	C2PUT
	LD	HL,ZZZZZZ
	CALL	C2PUT
	LD	BC,ZZZZZZ-COMMAND
	POP	HL
CNFG20:
	LD	A,(HL+)
	SRV	PUTCHR
	DEC	BC
	LD	A,B
	OR	C
	JR	NZ,CNFG20
	SRV	CLOSE
;
	SRV	WARM
;
C2PUT:	LD	A,L
	SRV	PUTCHR
	LD	A,H
	SRV	PUTCHR
	RET
;
ONFIGMES:	DEFB	"ONFIG",0
;
STATUS:
	SRV	CPRNXT
	DEFB	"TEXT SIZE/BUFFER SIZE:",9,0
	CALL	SCHEND
	LD	DE,(TXTTOP)
	OR	A
	SBC	HL,DE
	SRV	CPRDEC
	LD	A,"/"
	SRV	CPRCHR
	LD	HL,(BUFSIZ)
	SRV	CPRDEC
	SRV	CPRCRLF
;
;CAPS LOCK INFORMATION
	SRV	CPRNXT
	DEFB	"CAPS LOCK:",9,"o",0
	LD	A,(CASEFLG)
	CALL	PRONOFF
	SRV	CPRCRLF
;
;SOUND FLAG INFORMATION
	SRV	CPRNXT
	DEFB	"SOUND SWITCH:",9,"So",0
	LD	A,(SSW)
	CALL	PRONOFF
	SRV	CPRCRLF
;
;WINDOW MODE
	SRV	CPRNXT
	DEFB	"WINDOW MODE:",9,0
	LD	HL,HDIVMES
	LD	A,(DIVMODE)
	OR	A
	JR	Z,STAT200
	LD	HL,VDIVMES
STAT200:
	SRV	CPRSTR
	SRV	CPRCRLF
;
; AUTO FORMATTER SWITCH
	SRV	CPRNXT
	DEFB	"AUTO FORMATTER:",9,"To",0
	LD	A,(FORMFLG)
	CALL	PRONOFF
	SRV	CPRCRLF
;
; NEC COMPATIBLE EOF SAVE
	SRV	CPRNXT
	DEFB	"NEC COMPATIBLE EOF:",9,"NEC o",0
	LD	A,(NECFLG)
	CALL	PRONOFF
	SRV	CPRCRLF
;
;KEYMAC USED/MAX
	SRV	CPRNXT
	DEFB	"KEYMAC USED/MAX:",9,0
	LD	HL,KMKEEPS
	LD	BC,0
STAT300:
	LD	A,(HL++)
	CP	$FF
	JR	Z,STAT400
	INC	B
	OR	A
	JR	Z,STAT300
	INC	C
	JR	STAT300
STAT400:
	LD	L,C
	LD	H,0
	SRV	CPRDEC
	LD	A,"/"
	SRV	CPRCHR
	LD	L,B
	LD	H,0
	SRV	CPRDEC
	SRV	CPRCRLF
;
;DEFINED FT AND BAK
	SRV	CPRNXT
	DEFB	"DEFAULTED FILE TYPE:",9,34,0
	LD	HL,AZAMES
	LOOP	B,3
	LD	A,(HL+)
	SRV	CPRCHR
	LEND
	LD	A,34
	SRV	CPRCHR
	SRV	CPRCRLF
;
	SRV	CPRNXT
	DEFB	"BACK UP FILE TYPE:",9,34,0
	LD	HL,BAKMES
	LOOP	B,3
	LD	A,(HL+)
	SRV	CPRCHR
	LEND
	LD	A,34
	SRV	CPRCHR
	SRV	CPRCRLF
;
;
	IF	FILEVER
	ELSE
	SRV	CPRNXT
	DEFB	$D,$A,"Text Area:",9,"$",0
	LD	HL,(TXTTOP)
	DEC	HL
	SRV	CPR4HEX
	SRV	CPRNXT
	DEFB	"-$",0
	CALL	SCHEND
	LD	DE,5
	ADD	HL,DE
	SRV	CPR4HEX
	LD	A,"/"
	SRV	CPRCHR
	LD	HL,(TXTTOP)
	LD	DE,(BUFSIZ)
	ADD	HL,DE
	DEC	HL
	SRV	CPR4HEX
	SRV	CPRNXT
	DEFB	$D,$A,"Label Table Reserved:",9,"$",0
	LD	HL,(AZATOP+21)
	SRV	CPR4HEX
	SRV	CPRNXT
	DEFB	"-$",0
	LD	HL,(AZATOP+23)
	SRV	CPR4HEX
	ENDIF
;
; SRV CPRNXT
; DEFB $D,$A,"Reserved Buffer size:",9,0
; LD HL,(BUFSIZ)
; SRV CPRDEC
; CALL PRCRLF
	RET
;
HDIVMES:	DEFB	"Hdiv",0
VDIVMES:	DEFB	"Vdiv",0
;
PRONOFF:
	OR	A
	LD	A,"n"
	JR	NZ,STAT100
	LD	A,"f"
	SRV	CPRCHR
STAT100:
	SRV	CPRCHR
	RET
;
SETAZA:
	LD	A,(IX+9)
	CP	" "
	RET	NZ
	KEEP	HL
	LD	HL,AZAMES
	CALL	SETSUB
	KEEPOUT
	RET
SETBAK:
	KEEP	HL
	LD	HL,BAKMES
	CALL	SETSUB
	KEEPOUT
	RET
AZAMES:	DEFB	"aza"
BAKMES:	DEFB	"bak"
;
SETSUB:
	KEEP	BC,IX
	LD	B,3
SETSUB10:
	LD	A,(HL+)
	LD	(IX+9),A
	INC	IX
	DJNZ	SETSUB10
	KEEPOUT
	RET
;
KEYMACS:
	LD	DE,EYMES
	CALL	SKIPNXT
	LD	A,(HL+)
	CALL	UPPER
	CP	"M"
	JR	Z,KEYMAC
	CP	"C"
	JR	Z,KEYCLEAR
	DEC	HL
	LD	DE,LISTMES
	CALL	SKIPNXT
	CALL	KMLIST
	SRV	WARM
;
KEYCLEAR:
	LD	DE,LEARMES
	CALL	SKIPNXT
	CALL	KMCLEAR
	SRV	WARM
;
KEYMAC:
	LD	DE,ACMES
	CALL	SKIPNXT
	CALL	KMDEF
	SRV	WARM
;
EYMES:	DEFB	"EY",0
LISTMES:	DEFB	"LIST",0
ACMES:	DEFB	"AC",0
;
;
KMCLEAR:	LD	HL,KMKEEPS
KMCL10:	LD	A,(HL)
	CP	$FF
	RET	Z
	LD	(HL+),0
	LD	(HL+),0
	JR	KMCL10
;
KMLIST:
	LD	IX,FCB2
	SRV	MAKFCB
	LD	A,(IX+1)
	XOR	$20
	OR	(IX+0)
	JR	NZ,KML10
	SRV	COFCB
	CALL	KMLSUB
	SRV	WARM
;
KML10:	LD	A,1
	LD	B,8
	LD	HL,(DIOBUF)
	SRV	OPEN
	CALL	KMLSUB
	LD	A,$1A
	SRV	PUTCHR
	SRV	CLOSE
	SRV	WARM
;
KMLSUB:	
	LD	HL,KMKEEPS
KML20:	LD	A,(HL+)
	LD	B,(HL+)
	OR	A
	JR	Z,KML20
	CP	$FF
	JR	Z,KMLEEE
	SRV	PUTNXT
	DEFB	" KEYMAC ",0
	KEEP	HL
	LD	L,A
	LD	H,0
	SRV	PUTDEC
	LD	A,","
	SRV	PUTCHR
	LD	L,B
	LD	H,0
	SRV	PUTDEC
	SRV	PUTCRLF
	KEEPOUT
	JR	KML20
KMLEEE:	RET
;
KMDEF:	CALL	SKIPSPC
	CALL	GETDEC
	PUSH	IX
	CP	","
	JP	NZ,KMDEL
	CALL	GETDEC
	PUSH	IX
	POP	HL
	EX	(SP),HL
	LD	A,H
	OR	A
	JP	NZ,RETFILT
	LD	A,L
	OR	A
	JP	Z,RETFILT
	LD	B,A
	POP	HL
	LD	A,H
	OR	A
	JP	NZ,RETFILT
	LD	A,L
	OR	A
	JP	Z,RETFILT
	LD	C,A
	LD	A,B
	CALL	KMSCH
	CP	$FF
	JR	Z,KMDEFNEW
	INC	HL
	LD	(HL),C		;RE-DEF
	SRV	WARM
KMDEFNEW:	
	XOR	A
	CALL	KMSCH
	CP	$FF
	JP	Z,OVRMACS
	LD	(HL+),B
	LD	(HL),C
	SRV	WARM		;NEW-DEF
;
KMDEL:
	POP	HL
	LD	A,H
	OR	A
	JP	NZ,RETFILT
	LD	A,L
	OR	A
	JP	Z,RETFILT
	CALL	KMSCH
	CP	$FF
	JP	Z,RETFILT
	LD	(HL+),0
	LD	(HL),0
	SRV	WARM
;
;
KMSCH:
	KEEP	BC
	LD	C,A
	LD	HL,KMKEEPS
KMS10:
	LD	A,(HL)
	CP	$FF
	JR	Z,KMSEEE
	CP	C
	JR	Z,KMSEEE
	INC	HL
	INC	HL
	JR	KMS10
KMSEEE:KEEPOUT
	RET
;
OVRMACS:
	SRV	CPRNXT
	DEFB	"KEYMAC TABLE IS ALREADY FULL!",7,$D,$A,0
	SRV	WARM
;
;
KMKEEPS:
	DEFB	0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0
	DEFB	0,0,0,0,0,0,0,0,0,0
	DEFB	$FF,$FF
;
VERSERR:	SRV	CPRNXT
	DEFB	$D,$A,"THIS EDITER IS FOR NEC PC-8801 or PC-8001",$D,$A
	DEFB	"Use right editer for your machine...",$D,$A,$A,7,0
	XOR	A
	LD	($100),A
	SRV	WARM
;
                                                            
;                                                                            
KMKEEPS:
 DEFB 0,0,0,0,0,0,0,0,0,0
 DEFB 0,0,0,0,0,0,0,0,0,0
 DEFB 0,0,0,0,0,0,0,0,0,0
 DEFB 0,0,0,0,0,0,0,0,0,0
 DEFB 0,0,0,0,0,0,0,0,0,0
 DEFB 0,0,0,0,0,0,0,0,0,0
 DEFB 0,0,0,0,0,0,0,0,0,0
 DEFB 0,0,0,0,0,0,0,0,0,0
 DEFB $FF,$FF
;
VERSERR:SRV CPRNXT
 DEFB $D,$A,"THIS EDITER IS FO