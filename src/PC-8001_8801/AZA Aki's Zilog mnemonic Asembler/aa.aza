;R6
;"analize operand
;
ANAOP:
;"output
;" HL:code table adr +1
;" DE:optional number
;
ANO100:	LD	(LAST_POS),IY
	XOR	A
	LD	(NOWIDX),A
	CALL	SSKIP		;SKIPS BEFORE BALNKS
	CALL	ANOPRE
	LD	A,B
	OR	A
	JP	Z,ANO300	;"NOT NAME(kakko)
	LD	A,C
	CP	$F0		;MAXMNM+1
	JP	NC,ANO200	;IF LABEL
	CP	103
	CALL	Z,ANOAFD	;AF or AF'?
;FROM HERE FIXED OPERAND NAME
	LD	HL,(VALUE)
	LD	A,(HL+)
	CP	4		;ONE-OPERATER?
	JP	Z,ANO200	; THEN CALC IT!
	CP	2
	JP	NZ,ILLOPR
	LD	DE,0		;"dummy answer of number
	LD	A,C
	CP	75+12		;IX?
	JR	Z,ANO170
	CP	76+12		;IY?
	LD	A,$FD
	JR	Z,ANO180
	JR	ANOPOST
ANO170:	LD	A,$DD
ANO180:	LD	(PREBYT),A	;"if IX or IY then set pre-byte
	LD	(NOWIDX),A
;
ANOPOST:
	CALL	SSKIP
	CP	"+"
	JR	Z,ANOPOST1
	CP	"-"
	JP	NZ,MAKPP
	LD	A,(POSTDEC)
	INC	A
	LD	(POSTDEC),A
	JR	ANOPOST2
ANOPOST1:	
	LD	A,(POSTINC)
	INC	A
	LD	(POSTINC),A
ANOPOST2:	
	INC	IY
	LD	A,1
	LD	(PP_EXIST),A
        JR      ANOPOST
;
ANOPRE:
	CALL	WSR
	RET	C
	LD	A,C
	CP	"+"
	JR	Z,ANOPRE1
	CP	"-"
	RET	NZ
	LD	(PP_EXIST),A
        LD      HL,PREDEC
	INC	(HL)
	JR	ANOPRE
ANOPRE1:
	LD	(PP_EXIST),A
        LD      HL,PREINC
	INC	(HL)
	JR	ANOPRE
;
ANOAFD:
	LD	A,(IY+0)
	CP	"'"
	RET	NZ		;"AF then ok!
	POP	AF		;"else AF'
	INC	IY
	LD	HL,AFDTBL
	RET
;
AFDTBL: DEFB    29
	DEFB	0
	DEFB	255
;
ANO200:	
	XOR	A
	LD	(PREINC),A
	LD	(PREDEC),A
	LD	IY,(LAST_POS)
	CALL	EXPRES		;calc value of expression(and label)
	EX	DE,HL
	LD	HL,NNNTBL
	RET
;
NNNTBL:	DEFB	6
	DEFB	0
	DEFB	7
	DEFB	0
	DEFB	8
	DEFB	0
	DEFB	12
	DEFB	0
	DEFB	13
	DEFB	0
	DEFB	16
	DEFB	0
	DEFB	255
;
ANO300:	LD	A,C
	CP	"("
	JR	NZ,ANO200	;"not kakk then expression
	LD	(LAST_POS),IY
	CALL	ANOPRE
	LD	A,B
	CP	1
	JP	NZ,ANO310
	LD	A,C
	CP	75+12
	JR	Z,ANOKIX
	CP	76+12
	JR	Z,ANOKIY
	CP	77+12
	LD	HL,KHLTBL
	JR	Z,KPOST
	CP	78+12
	LD	HL,KDETBL
	JR	Z,KPOST
	CP	79+12
	LD	HL,KBCTBL
	JR	Z,KPOST
	CP	82+12
	LD	HL,KCTBL
	JR	Z,KPOST
	CP	80+12
	LD	HL,KSPTBL
	JR	Z,KPOST
ANO310:	
	XOR	A
	LD	(PREINC),A
	LD	(PREDEC),A
	LD	IY,(LAST_POS)
	CALL	EXPRES
	EX	DE,HL
	LD	HL,KNNTBL
	JR	KAKKON
;
KPOST:	KEEP	HL
        LD      HL,(VALUE)
	LD	A,(HL+)
	CALL	ANOPOST
	KEEPOUT
        JP      KAKKON
;
KHLTBL:
	DEFB	0
	DEFB	$30
	DEFB	1
	DEFB	6
	DEFB	22
	DEFB	0
	DEFB	255
KDETBL:
	DEFB	23
	DEFB	0
	DEFB	255
KBCTBL:
	DEFB	24
	DEFB	0
	DEFB	255
KCTBL:
	DEFB	18
	DEFB	0
	DEFB	255
KSPTBL:
	DEFB	28
	DEFB	0
	DEFB	255
KNNTBL:
	DEFB	14
	DEFB	0
	DEFB	32
	DEFB	0
	DEFB	255
;
ANOKIY:
	LD	A,$FD
	DEFB	01		;"LD BC,nnnn/2bytes skip
ANOKIX:
	LD	A,$DD
	LD	(PREBYT),A
	CALL	WSR
	LD	HL,")"
	OR	A
	SBC	HL,BC
	LD	HL,KIXTBL
	JP	Z,ANOPOST
	LD	A,(PREBYT)
	LD	(IDXBYT),A
	XOR	A
	LD	(PREBYT),A
	CALL	EXPRE2X
	LD	A,(PASS)
	CP	1
	JR	Z,KIXA10
	LD	C,L
	LD	DE,128
	ADD	HL,DE		;BC
	LD	A,H
	OR	A
	JP	NZ,OUTOFS
KIXA10:	LD	A,C
	LD	(OFSBYT),A
	LD	HL,KIDTBL
	LD	DE,0
KAKKON:	LD	A,(IY+0)
	INC	IY
	CP	")"
	JP	NZ,ILLFRM
	RET
;
KIDTBL:	DEFB	0
	DEFB	$30
	DEFB	1
	DEFB	6
	DEFB	255
;
KIXTBL:	DEFB	15
	DEFB	0
	DEFB	255
;
MAKPP:	LD	A,(PREINC)
	OR	A
	JR	Z,MAKP10
        LD      IX,PRECODE+1
        LD      B,0
	CALL	MAKPP100
MAKP10:	LD	A,(PREDEC)
	OR	A
	JR	Z,MAKP20
        LD      IX,PRECODE+4
        LD      B,$FF
	CALL	MAKPP100
MAKP20:	LD	A,(POSTINC)
	OR	A
	JR	Z,MAKP30
        LD      IX,POSTCODE+1
	LD	B,0
	CALL	MAKPP100
MAKP30:	LD	A,(POSTDEC)
	OR	A
	RET	Z
        LD      IX,POSTCODE+4
	LD	B,$FF
;
MAKPP100:
	PUSH	HL
	PUSH	DE
	EX	DE,HL
MKPP10:	LD	A,(DE)
	INC	DE
	OR	A
	JR	Z,MAKPR
	CP	2
	JR	Z,MAKPD
	CP	11
	JR	Z,MAKPD
	CP	15
	JR	Z,MAKPD
	CP	255
	JP	Z,PPERR
	INC	DE
	JR	MKPP10
MAKPR:
	LD	A,B
	AND	1
	OR	%100
;
MAKPCOM:	
	LD	B,A
	LD	A,(DE)
	OR	B
	LD	(IX+1),A
	LD	A,(NOWIDX)
	LD	(IX+0),A
	OR	A
	JR	Z,MAKPCOM10
	LD	A,$20
	OR	(IX+1)
	LD	(IX+1),A
MAKPCOM10:	
	POP	DE
	POP	HL
	RET
;
MAKPD:
	LD	A,B
	AND	%1000
	OR	%11
	JR	MAKPCOM
;
;RSVPP:  LD      IX,PRECODE
;        LD      B,6
;RSVPP10:
;        LD      A,(IX+0)
;        LD      (IX+6),A
;        LD      A,(IX+12)
;        LD      (IX+18),A
;        INC     IX
;        DJNZ    RSVPP10
;        JP      CLRPP
RSVPP:	
	LD	HL,PRECODE
	LD	DE,PRECODE+6
	LDI			;1
	LDI			;2
	LDI			;3
	LDI			;4
	LDI			;5
	LDI			;6
	LD	HL,POSTCODE
	LD	DE,POSTCODE+6
	LDI			;1
	LDI			;2
	LDI			;3
	LDI			;4
	LDI			;5
	LDI			;6
;
CLRPP:	LD	A,(PPFLG)
	OR	A
	RET	NZ
	XOR	A
	LD	HL,PRECODE
	LD	DE,PRECODE+1
	LD	(HL),A
	LDI			;1
	LDI			;2
	LDI			;3
	LDI			;4
	LDI			;5
	LD	HL,POSTCODE
	LD	DE,POSTCODE+1
	LD	(HL),A
	LDI			;1
	LDI			;2
	LDI			;3
	LDI			;4
	LDI			;5
	RET
;
;
; WORK AREA TO DIVIDE PP/EXPRESSION +-
LAST_POS:	
	DW	0
;
; END OF INCLUDED MODULE 'aa.aza'
